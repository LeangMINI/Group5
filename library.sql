--------------------------------------------------------
--  File created - Saturday-May-13-2023   
--------------------------------------------------------
--------------------------------------------------------
--  DDL for Sequence TBLAUTHOR_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  "LIBRARY"."TBLAUTHOR_SEQ"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 61 CACHE 20 NOORDER  NOCYCLE  NOKEEP  NOSCALE  GLOBAL ;
--------------------------------------------------------
--  DDL for Sequence TBLBOOKCLOSET_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  "LIBRARY"."TBLBOOKCLOSET_SEQ"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 61 CACHE 20 NOORDER  NOCYCLE  NOKEEP  NOSCALE  GLOBAL ;
--------------------------------------------------------
--  DDL for Sequence TBLBOOKTYPE_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  "LIBRARY"."TBLBOOKTYPE_SEQ"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 61 CACHE 20 NOORDER  NOCYCLE  NOKEEP  NOSCALE  GLOBAL ;
--------------------------------------------------------
--  DDL for Sequence TBLBOOK_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  "LIBRARY"."TBLBOOK_SEQ"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 101 CACHE 20 NOORDER  NOCYCLE  NOKEEP  NOSCALE  GLOBAL ;
--------------------------------------------------------
--  DDL for Sequence TBLBORROW_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  "LIBRARY"."TBLBORROW_SEQ"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 1 CACHE 20 NOORDER  NOCYCLE  NOKEEP  NOSCALE  GLOBAL ;
--------------------------------------------------------
--  DDL for Sequence TBLBORROW_SEQ1
--------------------------------------------------------

   CREATE SEQUENCE  "LIBRARY"."TBLBORROW_SEQ1"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 21 CACHE 20 NOORDER  NOCYCLE  NOKEEP  NOSCALE  GLOBAL ;
--------------------------------------------------------
--  DDL for Sequence TBLBORROW_SEQ2
--------------------------------------------------------

   CREATE SEQUENCE  "LIBRARY"."TBLBORROW_SEQ2"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 21 CACHE 20 NOORDER  NOCYCLE  NOKEEP  NOSCALE  GLOBAL ;
--------------------------------------------------------
--  DDL for Sequence TBLBORROW_SEQ3
--------------------------------------------------------

   CREATE SEQUENCE  "LIBRARY"."TBLBORROW_SEQ3"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 41 CACHE 20 NOORDER  NOCYCLE  NOKEEP  NOSCALE  GLOBAL ;
--------------------------------------------------------
--  DDL for Sequence TBLBORROW_SEQ4
--------------------------------------------------------

   CREATE SEQUENCE  "LIBRARY"."TBLBORROW_SEQ4"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 21 CACHE 20 NOORDER  NOCYCLE  NOKEEP  NOSCALE  GLOBAL ;
--------------------------------------------------------
--  DDL for Sequence TBLBORROW_SEQ5
--------------------------------------------------------

   CREATE SEQUENCE  "LIBRARY"."TBLBORROW_SEQ5"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 61 CACHE 20 NOORDER  NOCYCLE  NOKEEP  NOSCALE  GLOBAL ;
--------------------------------------------------------
--  DDL for Sequence TBLPAYMENT_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  "LIBRARY"."TBLPAYMENT_SEQ"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 1 CACHE 20 NOORDER  NOCYCLE  NOKEEP  NOSCALE  GLOBAL ;
--------------------------------------------------------
--  DDL for Sequence TBLPAYMENT_SEQ1
--------------------------------------------------------

   CREATE SEQUENCE  "LIBRARY"."TBLPAYMENT_SEQ1"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 41 CACHE 20 NOORDER  NOCYCLE  NOKEEP  NOSCALE  GLOBAL ;
--------------------------------------------------------
--  DDL for Sequence TBLPAYMENT_SEQ2
--------------------------------------------------------

   CREATE SEQUENCE  "LIBRARY"."TBLPAYMENT_SEQ2"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 61 CACHE 20 NOORDER  NOCYCLE  NOKEEP  NOSCALE  GLOBAL ;
--------------------------------------------------------
--  DDL for Sequence TBLRETURN_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  "LIBRARY"."TBLRETURN_SEQ"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 1 CACHE 20 NOORDER  NOCYCLE  NOKEEP  NOSCALE  GLOBAL ;
--------------------------------------------------------
--  DDL for Sequence TBLRETURN_SEQ1
--------------------------------------------------------

   CREATE SEQUENCE  "LIBRARY"."TBLRETURN_SEQ1"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 21 CACHE 20 NOORDER  NOCYCLE  NOKEEP  NOSCALE  GLOBAL ;
--------------------------------------------------------
--  DDL for Sequence TBLRETURN_SEQ2
--------------------------------------------------------

   CREATE SEQUENCE  "LIBRARY"."TBLRETURN_SEQ2"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 21 CACHE 20 NOORDER  NOCYCLE  NOKEEP  NOSCALE  GLOBAL ;
--------------------------------------------------------
--  DDL for Sequence TBLRETURN_SEQ3
--------------------------------------------------------

   CREATE SEQUENCE  "LIBRARY"."TBLRETURN_SEQ3"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 21 CACHE 20 NOORDER  NOCYCLE  NOKEEP  NOSCALE  GLOBAL ;
--------------------------------------------------------
--  DDL for Sequence TBLRETURN_SEQ4
--------------------------------------------------------

   CREATE SEQUENCE  "LIBRARY"."TBLRETURN_SEQ4"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 41 CACHE 20 NOORDER  NOCYCLE  NOKEEP  NOSCALE  GLOBAL ;
--------------------------------------------------------
--  DDL for Sequence TBLRETURN_SEQ5
--------------------------------------------------------

   CREATE SEQUENCE  "LIBRARY"."TBLRETURN_SEQ5"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 21 CACHE 20 NOORDER  NOCYCLE  NOKEEP  NOSCALE  GLOBAL ;
--------------------------------------------------------
--  DDL for Sequence TBLRETURN_SEQ6
--------------------------------------------------------

   CREATE SEQUENCE  "LIBRARY"."TBLRETURN_SEQ6"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 41 CACHE 20 NOORDER  NOCYCLE  NOKEEP  NOSCALE  GLOBAL ;
--------------------------------------------------------
--  DDL for Sequence TBLUSER_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  "LIBRARY"."TBLUSER_SEQ"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 1 CACHE 20 NOORDER  NOCYCLE  NOKEEP  NOSCALE  GLOBAL ;
--------------------------------------------------------
--  DDL for Sequence TBLUSER_SEQ1
--------------------------------------------------------

   CREATE SEQUENCE  "LIBRARY"."TBLUSER_SEQ1"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 1 CACHE 20 NOORDER  NOCYCLE  NOKEEP  NOSCALE  GLOBAL ;
--------------------------------------------------------
--  DDL for Sequence TBLUSER_SEQ2
--------------------------------------------------------

   CREATE SEQUENCE  "LIBRARY"."TBLUSER_SEQ2"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 61 CACHE 20 NOORDER  NOCYCLE  NOKEEP  NOSCALE  GLOBAL ;
--------------------------------------------------------
--  DDL for Table TBLAUTHOR
--------------------------------------------------------

  CREATE TABLE "LIBRARY"."TBLAUTHOR" 
   (	"AUTHORID" NUMBER, 
	"AUTHORNAME" VARCHAR2(50 BYTE), 
	"GENDER" VARCHAR2(10 BYTE), 
	"ADDRESS" VARCHAR2(100 BYTE), 
	"PHONE" VARCHAR2(20 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Table TBLBOOK
--------------------------------------------------------

  CREATE TABLE "LIBRARY"."TBLBOOK" 
   (	"BOOKID" NUMBER, 
	"BOOKNAME" VARCHAR2(100 BYTE), 
	"BOOKTYPEID" NUMBER, 
	"CREATEYEAR" NUMBER, 
	"AUTHORID" NUMBER, 
	"CLOSETID" NUMBER, 
	"FLOOR" NUMBER, 
	"CREATEBY" VARCHAR2(50 BYTE), 
	"CREATEDATE" DATE DEFAULT sysdate, 
	"UPDATEBY" VARCHAR2(50 BYTE), 
	"UPDATEDATE" DATE DEFAULT NULL, 
	"IMAGE" BLOB, 
	"PRICE" VARCHAR2(30 BYTE), 
	"QTY" NUMBER(*,0), 
	"ISDELETED" NUMBER(3,0) DEFAULT 0
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" 
 LOB ("IMAGE") STORE AS SECUREFILE (
  TABLESPACE "USERS" ENABLE STORAGE IN ROW 4000 CHUNK 8192
  NOCACHE LOGGING  NOCOMPRESS  KEEP_DUPLICATES 
  STORAGE(INITIAL 262144 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)) ;
--------------------------------------------------------
--  DDL for Table TBLBOOKCLOSET
--------------------------------------------------------

  CREATE TABLE "LIBRARY"."TBLBOOKCLOSET" 
   (	"CLOSETID" NUMBER, 
	"CLOSET" VARCHAR2(20 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Table TBLBOOKTYPE
--------------------------------------------------------

  CREATE TABLE "LIBRARY"."TBLBOOKTYPE" 
   (	"BOOKTYPEID" NUMBER, 
	"BOOKTYPE" VARCHAR2(100 BYTE), 
	"DESCRIPTION" VARCHAR2(100 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Table TBLBORROW
--------------------------------------------------------

  CREATE TABLE "LIBRARY"."TBLBORROW" 
   (	"BORROWID" NUMBER, 
	"USERID" NUMBER, 
	"BOOKID" NUMBER, 
	"QTY" NUMBER, 
	"BORROWDATE" DATE DEFAULT sysdate, 
	"PAYMENTDETAILID" NUMBER, 
	"IMAGE" BLOB, 
	"STUID" NUMBER, 
	"PRICE" NUMBER, 
	"STATUS" VARCHAR2(20 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" 
 LOB ("IMAGE") STORE AS SECUREFILE (
  TABLESPACE "USERS" ENABLE STORAGE IN ROW 4000 CHUNK 8192
  NOCACHE LOGGING  NOCOMPRESS  KEEP_DUPLICATES 
  STORAGE(INITIAL 262144 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)) ;
--------------------------------------------------------
--  DDL for Table TBLPAYMENT
--------------------------------------------------------

  CREATE TABLE "LIBRARY"."TBLPAYMENT" 
   (	"PAYMENTID" NUMBER, 
	"USERID" NUMBER, 
	"BOOKID" NUMBER, 
	"PAYMENTDETAILID" NUMBER, 
	"DESCRIPTION" VARCHAR2(100 BYTE), 
	"STUID" NUMBER, 
	"PRICE" NUMBER, 
	"IMAGE" BLOB, 
	"PAYDATE" DATE DEFAULT sysdate, 
	"QTY" NUMBER
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" 
 LOB ("IMAGE") STORE AS SECUREFILE (
  TABLESPACE "USERS" ENABLE STORAGE IN ROW 4000 CHUNK 8192
  NOCACHE LOGGING  NOCOMPRESS  KEEP_DUPLICATES 
  STORAGE(INITIAL 262144 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)) ;
--------------------------------------------------------
--  DDL for Table TBLPAYMENTDETAIL
--------------------------------------------------------

  CREATE TABLE "LIBRARY"."TBLPAYMENTDETAIL" 
   (	"PAYMENTDETAILID" NUMBER GENERATED BY DEFAULT AS IDENTITY MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 1 NOCACHE  NOORDER  NOCYCLE  NOKEEP  NOSCALE , 
	"PAY" VARCHAR2(30 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Table TBLRETURN
--------------------------------------------------------

  CREATE TABLE "LIBRARY"."TBLRETURN" 
   (	"RETURNID" NUMBER, 
	"USERID" NUMBER, 
	"BOOKID" NUMBER, 
	"PAYMENTDETAILID" NUMBER, 
	"RETURNDATE" DATE DEFAULT sysdate, 
	"QTY" NUMBER, 
	"IMAGE" BLOB, 
	"STUID" NUMBER, 
	"STATUS" VARCHAR2(20 BYTE), 
	"PRICE" NUMBER
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" 
 LOB ("IMAGE") STORE AS SECUREFILE (
  TABLESPACE "USERS" ENABLE STORAGE IN ROW 4000 CHUNK 8192
  NOCACHE LOGGING  NOCOMPRESS  KEEP_DUPLICATES 
  STORAGE(INITIAL 262144 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)) ;
--------------------------------------------------------
--  DDL for Table TBLSTUDENT
--------------------------------------------------------

  CREATE TABLE "LIBRARY"."TBLSTUDENT" 
   (	"STUID" NUMBER GENERATED BY DEFAULT AS IDENTITY MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 1 NOCACHE  NOORDER  NOCYCLE  NOKEEP  NOSCALE , 
	"STUNAME" VARCHAR2(50 BYTE), 
	"GENDER" VARCHAR2(20 BYTE), 
	"PHONENUMBER" VARCHAR2(20 BYTE), 
	"ADDRESS" VARCHAR2(50 BYTE), 
	"COLLEGE" VARCHAR2(50 BYTE), 
	"SYEAR" VARCHAR2(20 BYTE), 
	"PHOTO" BLOB
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" 
 LOB ("PHOTO") STORE AS SECUREFILE (
  TABLESPACE "USERS" ENABLE STORAGE IN ROW 4000 CHUNK 8192
  NOCACHE LOGGING  NOCOMPRESS  KEEP_DUPLICATES 
  STORAGE(INITIAL 262144 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)) ;
--------------------------------------------------------
--  DDL for Table TBLUSER
--------------------------------------------------------

  CREATE TABLE "LIBRARY"."TBLUSER" 
   (	"USERID" NUMBER, 
	"USERNAME" VARCHAR2(100 BYTE), 
	"PASSWORD" NUMBER, 
	"GENDER" VARCHAR2(10 BYTE), 
	"DOB" DATE, 
	"POB" VARCHAR2(100 BYTE), 
	"PHONE" VARCHAR2(20 BYTE), 
	"ADDRESS" VARCHAR2(100 BYTE), 
	"PHOTO" BLOB
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" 
 LOB ("PHOTO") STORE AS SECUREFILE (
  TABLESPACE "USERS" ENABLE STORAGE IN ROW 4000 CHUNK 8192
  NOCACHE LOGGING  NOCOMPRESS  KEEP_DUPLICATES 
  STORAGE(INITIAL 262144 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)) ;
--------------------------------------------------------
--  DDL for View VBOOK
--------------------------------------------------------

  CREATE OR REPLACE FORCE EDITIONABLE VIEW "LIBRARY"."VBOOK" ("BOOKID", "IMAGE", "BOOKNAME", "BOOKTYPE", "CREATEYEAR", "AUTHORNAME", "CLOSET", "FLOOR", "CREATEBY", "CREATEDATE", "UPDATEBY", "UPDATEDATE", "PRICE", "QTY", "ISDELETED") AS 
  SELECT b.bookid, b.image, b.bookname, t.booktype, b.createyear, a.authorname,
c.closet, b.floor, b.createby, b.createdate, b.updateby, b.updatedate,
b.price, b.qty, b.isdeleted

FROM tblBooktype t, tblAuthor a, tblBookcloset c, tblBook b
where t.Booktypeid = b.booktypeid and a.Authorid = b.authorid 
and c.closetid = b.closetid
;
--------------------------------------------------------
--  DDL for View VBORROW
--------------------------------------------------------

  CREATE OR REPLACE FORCE EDITIONABLE VIEW "LIBRARY"."VBORROW" ("BORROWID", "USERNAME", "BOOKNAME", "PAY", "QTY", "BORROWDATE", "IMAGE") AS 
  SELECT r.borrowid, u.username, b.bookname, p.pay, 
r.qty, r.borrowdate, r.image

FROM tbluser u, tblbook b, tblpaymentdetail p, tblborrow r
where u.userid = r.userid and b.bookid = r.bookid 
and p.paymentdetailid = r.paymentdetailid
;
--------------------------------------------------------
--  DDL for View VPAYMENT
--------------------------------------------------------

  CREATE OR REPLACE FORCE EDITIONABLE VIEW "LIBRARY"."VPAYMENT" ("PAYMENTID", "USERNAME", "BOOKNAME", "PAY", "STUID", "PRICE", "PAYDATE", "QTY") AS 
  SELECT p.paymentid, u.username, b.bookname, d.pay, s.stuid, p.price, p.paydate, p.qty

FROM tbluser u, tblbook b, tblpaymentdetail d, tblStudent s, tblpayment p
where u.userid = p.userid and b.bookid = p.bookid 
and d.paymentdetailid = p.paymentdetailid and s.stuid = p.stuid
;
--------------------------------------------------------
--  DDL for View VRETURN
--------------------------------------------------------

  CREATE OR REPLACE FORCE EDITIONABLE VIEW "LIBRARY"."VRETURN" ("RETURNID", "USERNAME", "BOOKNAME", "PAY", "RETURNDATE", "QTY", "IMAGE") AS 
  SELECT r.returnid, u.username, b.bookname, p.pay, 
r.returndate, r.qty, r.image

FROM tbluser u, tblbook b, tblpaymentdetail p, tblreturn r
where u.userid = r.userid and b.bookid = r.bookid 
and p.paymentdetailid = r.paymentdetailid
;
REM INSERTING into LIBRARY.TBLAUTHOR
SET DEFINE OFF;
Insert into LIBRARY.TBLAUTHOR (AUTHORID,AUTHORNAME,GENDER,ADDRESS,PHONE) values (22,'Penh','Male','Kompong Tom','012344');
Insert into LIBRARY.TBLAUTHOR (AUTHORID,AUTHORNAME,GENDER,ADDRESS,PHONE) values (1,'Khunhy','Male','SiemReap','012408523');
Insert into LIBRARY.TBLAUTHOR (AUTHORID,AUTHORNAME,GENDER,ADDRESS,PHONE) values (42,'Sakada','Male','PhonePenh','08325693');
Insert into LIBRARY.TBLAUTHOR (AUTHORID,AUTHORNAME,GENDER,ADDRESS,PHONE) values (41,'Khun Sokrin','male','phnom penh','123644');
Insert into LIBRARY.TBLAUTHOR (AUTHORID,AUTHORNAME,GENDER,ADDRESS,PHONE) values (21,'Troeng Ngea','Male','Battambang','97346726');
Insert into LIBRARY.TBLAUTHOR (AUTHORID,AUTHORNAME,GENDER,ADDRESS,PHONE) values (43,'Fing','Male','Sr','13545');
Insert into LIBRARY.TBLAUTHOR (AUTHORID,AUTHORNAME,GENDER,ADDRESS,PHONE) values (44,'Khousak','Male','Siem Reap ','0348398434');
REM INSERTING into LIBRARY.TBLBOOK
SET DEFINE OFF;
Insert into LIBRARY.TBLBOOK (BOOKID,BOOKNAME,BOOKTYPEID,CREATEYEAR,AUTHORID,CLOSETID,FLOOR,CREATEBY,CREATEDATE,UPDATEBY,UPDATEDATE,PRICE,QTY,ISDELETED) values (2,'Protocol',1,2009,1,2,1,'Khunhy',to_date('15-DEC-22','DD-MON-RR'),'Khunhy',to_date('27-APR-23','DD-MON-RR'),'3',48,0);
Insert into LIBRARY.TBLBOOK (BOOKID,BOOKNAME,BOOKTYPEID,CREATEYEAR,AUTHORID,CLOSETID,FLOOR,CREATEBY,CREATEDATE,UPDATEBY,UPDATEDATE,PRICE,QTY,ISDELETED) values (61,'Khmer 1975',21,2022,21,42,5,'Khunhy',to_date('29-APR-23','DD-MON-RR'),null,null,'2',22,0);
Insert into LIBRARY.TBLBOOK (BOOKID,BOOKNAME,BOOKTYPEID,CREATEYEAR,AUTHORID,CLOSETID,FLOOR,CREATEBY,CREATEDATE,UPDATEBY,UPDATEDATE,PRICE,QTY,ISDELETED) values (4,'Laravel',1,1999,1,2,2,'Leang',to_date('15-DEC-22','DD-MON-RR'),null,null,'3',30,0);
Insert into LIBRARY.TBLBOOK (BOOKID,BOOKNAME,BOOKTYPEID,CREATEYEAR,AUTHORID,CLOSETID,FLOOR,CREATEBY,CREATEDATE,UPDATEBY,UPDATEDATE,PRICE,QTY,ISDELETED) values (41,'Love',62,2023,22,2,2,'Leang',to_date('27-APR-23','DD-MON-RR'),null,null,'2',21,0);
Insert into LIBRARY.TBLBOOK (BOOKID,BOOKNAME,BOOKTYPEID,CREATEYEAR,AUTHORID,CLOSETID,FLOOR,CREATEBY,CREATEDATE,UPDATEBY,UPDATEDATE,PRICE,QTY,ISDELETED) values (1,'Java',22,2011,1,44,2,'Khunhy',to_date('15-DEC-22','DD-MON-RR'),'Khunhy',to_date('07-MAY-23','DD-MON-RR'),'3',50,0);
REM INSERTING into LIBRARY.TBLBOOKCLOSET
SET DEFINE OFF;
Insert into LIBRARY.TBLBOOKCLOSET (CLOSETID,CLOSET) values (22,'Closet E');
Insert into LIBRARY.TBLBOOKCLOSET (CLOSETID,CLOSET) values (2,'Closet A');
Insert into LIBRARY.TBLBOOKCLOSET (CLOSETID,CLOSET) values (3,'Closet B');
Insert into LIBRARY.TBLBOOKCLOSET (CLOSETID,CLOSET) values (42,'Closet C');
Insert into LIBRARY.TBLBOOKCLOSET (CLOSETID,CLOSET) values (21,'Closet D');
Insert into LIBRARY.TBLBOOKCLOSET (CLOSETID,CLOSET) values (44,'Closet F');
REM INSERTING into LIBRARY.TBLBOOKTYPE
SET DEFINE OFF;
Insert into LIBRARY.TBLBOOKTYPE (BOOKTYPEID,BOOKTYPE,DESCRIPTION) values (1,'Programming','2012');
Insert into LIBRARY.TBLBOOKTYPE (BOOKTYPEID,BOOKTYPE,DESCRIPTION) values (22,'Technology','Imformation Technology 2023');
Insert into LIBRARY.TBLBOOKTYPE (BOOKTYPEID,BOOKTYPE,DESCRIPTION) values (3,'Network','2022');
Insert into LIBRARY.TBLBOOKTYPE (BOOKTYPEID,BOOKTYPE,DESCRIPTION) values (21,'History','About History.');
Insert into LIBRARY.TBLBOOKTYPE (BOOKTYPEID,BOOKTYPE,DESCRIPTION) values (62,'roman','love');
Insert into LIBRARY.TBLBOOKTYPE (BOOKTYPEID,BOOKTYPE,DESCRIPTION) values (42,'roroe','love');
REM INSERTING into LIBRARY.TBLBORROW
SET DEFINE OFF;
Insert into LIBRARY.TBLBORROW (BORROWID,USERID,BOOKID,QTY,BORROWDATE,PAYMENTDETAILID,STUID,PRICE,STATUS) values (9,1,41,1,to_date('27-APR-23','DD-MON-RR'),1,1,null,null);
Insert into LIBRARY.TBLBORROW (BORROWID,USERID,BOOKID,QTY,BORROWDATE,PAYMENTDETAILID,STUID,PRICE,STATUS) values (7,1,1,1,to_date('27-APR-23','DD-MON-RR'),1,1,null,null);
Insert into LIBRARY.TBLBORROW (BORROWID,USERID,BOOKID,QTY,BORROWDATE,PAYMENTDETAILID,STUID,PRICE,STATUS) values (10,1,41,1,to_date('29-APR-23','DD-MON-RR'),3,3,2,'Return');
Insert into LIBRARY.TBLBORROW (BORROWID,USERID,BOOKID,QTY,BORROWDATE,PAYMENTDETAILID,STUID,PRICE,STATUS) values (11,1,61,0,to_date('29-APR-23','DD-MON-RR'),3,3,2,'Return');
Insert into LIBRARY.TBLBORROW (BORROWID,USERID,BOOKID,QTY,BORROWDATE,PAYMENTDETAILID,STUID,PRICE,STATUS) values (21,1,61,2,to_date('30-APR-23','DD-MON-RR'),1,3,2,'Return 1 book');
Insert into LIBRARY.TBLBORROW (BORROWID,USERID,BOOKID,QTY,BORROWDATE,PAYMENTDETAILID,STUID,PRICE,STATUS) values (1,1,2,1,to_date('17-DEC-22','DD-MON-RR'),1,null,null,null);
Insert into LIBRARY.TBLBORROW (BORROWID,USERID,BOOKID,QTY,BORROWDATE,PAYMENTDETAILID,STUID,PRICE,STATUS) values (2,1,1,5,to_date('17-DEC-22','DD-MON-RR'),2,null,null,null);
Insert into LIBRARY.TBLBORROW (BORROWID,USERID,BOOKID,QTY,BORROWDATE,PAYMENTDETAILID,STUID,PRICE,STATUS) values (3,1,4,3,to_date('17-DEC-22','DD-MON-RR'),2,null,null,null);
Insert into LIBRARY.TBLBORROW (BORROWID,USERID,BOOKID,QTY,BORROWDATE,PAYMENTDETAILID,STUID,PRICE,STATUS) values (4,3,2,7,to_date('17-DEC-22','DD-MON-RR'),2,null,null,null);
Insert into LIBRARY.TBLBORROW (BORROWID,USERID,BOOKID,QTY,BORROWDATE,PAYMENTDETAILID,STUID,PRICE,STATUS) values (5,1,2,6,to_date('19-DEC-22','DD-MON-RR'),1,null,null,null);
Insert into LIBRARY.TBLBORROW (BORROWID,USERID,BOOKID,QTY,BORROWDATE,PAYMENTDETAILID,STUID,PRICE,STATUS) values (6,1,4,7,to_date('19-DEC-22','DD-MON-RR'),2,null,null,null);
Insert into LIBRARY.TBLBORROW (BORROWID,USERID,BOOKID,QTY,BORROWDATE,PAYMENTDETAILID,STUID,PRICE,STATUS) values (8,1,41,1,to_date('27-APR-23','DD-MON-RR'),1,1,null,null);
Insert into LIBRARY.TBLBORROW (BORROWID,USERID,BOOKID,QTY,BORROWDATE,PAYMENTDETAILID,STUID,PRICE,STATUS) values (41,1,2,1,to_date('07-MAY-23','DD-MON-RR'),3,3,3,null);
Insert into LIBRARY.TBLBORROW (BORROWID,USERID,BOOKID,QTY,BORROWDATE,PAYMENTDETAILID,STUID,PRICE,STATUS) values (42,1,2,1,to_date('07-MAY-23','DD-MON-RR'),3,1,3,null);
REM INSERTING into LIBRARY.TBLPAYMENT
SET DEFINE OFF;
Insert into LIBRARY.TBLPAYMENT (PAYMENTID,USERID,BOOKID,PAYMENTDETAILID,DESCRIPTION,STUID,PRICE,PAYDATE,QTY) values (1,1,61,3,null,3,2,to_date('29-APR-23','DD-MON-RR'),2);
Insert into LIBRARY.TBLPAYMENT (PAYMENTID,USERID,BOOKID,PAYMENTDETAILID,DESCRIPTION,STUID,PRICE,PAYDATE,QTY) values (21,1,61,1,null,3,2,to_date('30-APR-23','DD-MON-RR'),1);
Insert into LIBRARY.TBLPAYMENT (PAYMENTID,USERID,BOOKID,PAYMENTDETAILID,DESCRIPTION,STUID,PRICE,PAYDATE,QTY) values (41,1,2,1,null,1,3,to_date('07-MAY-23','DD-MON-RR'),1);
REM INSERTING into LIBRARY.TBLPAYMENTDETAIL
SET DEFINE OFF;
Insert into LIBRARY.TBLPAYMENTDETAIL (PAYMENTDETAILID,PAY) values (3,'?????????');
Insert into LIBRARY.TBLPAYMENTDETAIL (PAYMENTDETAILID,PAY) values (1,'Paid');
Insert into LIBRARY.TBLPAYMENTDETAIL (PAYMENTDETAILID,PAY) values (2,'Not Yet');
Insert into LIBRARY.TBLPAYMENTDETAIL (PAYMENTDETAILID,PAY) values (4,'Pay');
REM INSERTING into LIBRARY.TBLRETURN
SET DEFINE OFF;
Insert into LIBRARY.TBLRETURN (RETURNID,USERID,BOOKID,PAYMENTDETAILID,RETURNDATE,QTY,STUID,STATUS,PRICE) values (1,1,41,3,to_date('27-APR-23','DD-MON-RR'),2,1,null,null);
Insert into LIBRARY.TBLRETURN (RETURNID,USERID,BOOKID,PAYMENTDETAILID,RETURNDATE,QTY,STUID,STATUS,PRICE) values (4,1,41,3,to_date('27-APR-23','DD-MON-RR'),2,1,null,null);
Insert into LIBRARY.TBLRETURN (RETURNID,USERID,BOOKID,PAYMENTDETAILID,RETURNDATE,QTY,STUID,STATUS,PRICE) values (5,1,61,3,to_date('29-APR-23','DD-MON-RR'),2,3,'Return',2);
Insert into LIBRARY.TBLRETURN (RETURNID,USERID,BOOKID,PAYMENTDETAILID,RETURNDATE,QTY,STUID,STATUS,PRICE) values (6,1,61,3,to_date('29-APR-23','DD-MON-RR'),2,3,'Return',2);
Insert into LIBRARY.TBLRETURN (RETURNID,USERID,BOOKID,PAYMENTDETAILID,RETURNDATE,QTY,STUID,STATUS,PRICE) values (24,1,41,3,to_date('30-APR-23','DD-MON-RR'),1,3,'Return',2);
Insert into LIBRARY.TBLRETURN (RETURNID,USERID,BOOKID,PAYMENTDETAILID,RETURNDATE,QTY,STUID,STATUS,PRICE) values (2,3,4,3,to_date('17-DEC-22','DD-MON-RR'),1,null,null,null);
Insert into LIBRARY.TBLRETURN (RETURNID,USERID,BOOKID,PAYMENTDETAILID,RETURNDATE,QTY,STUID,STATUS,PRICE) values (3,1,4,5,to_date('19-DEC-22','DD-MON-RR'),1,null,null,null);
Insert into LIBRARY.TBLRETURN (RETURNID,USERID,BOOKID,PAYMENTDETAILID,RETURNDATE,QTY,STUID,STATUS,PRICE) values (21,1,41,3,to_date('30-APR-23','DD-MON-RR'),1,3,'Return 1 book',2);
Insert into LIBRARY.TBLRETURN (RETURNID,USERID,BOOKID,PAYMENTDETAILID,RETURNDATE,QTY,STUID,STATUS,PRICE) values (22,1,61,1,to_date('30-APR-23','DD-MON-RR'),1,3,'Return 1 book',2);
Insert into LIBRARY.TBLRETURN (RETURNID,USERID,BOOKID,PAYMENTDETAILID,RETURNDATE,QTY,STUID,STATUS,PRICE) values (23,1,61,1,to_date('30-APR-23','DD-MON-RR'),1,3,'Return 1 book',2);
REM INSERTING into LIBRARY.TBLSTUDENT
SET DEFINE OFF;
Insert into LIBRARY.TBLSTUDENT (STUID,STUNAME,GENDER,PHONENUMBER,ADDRESS,COLLEGE,SYEAR) values (3,'Leang','Male','123345','PhonePenh','Accounting','Year3');
Insert into LIBRARY.TBLSTUDENT (STUID,STUNAME,GENDER,PHONENUMBER,ADDRESS,COLLEGE,SYEAR) values (1,'Khunhy','Male','01234456','SiemReap','IT','Year3');
REM INSERTING into LIBRARY.TBLUSER
SET DEFINE OFF;
Insert into LIBRARY.TBLUSER (USERID,USERNAME,PASSWORD,GENDER,DOB,POB,PHONE,ADDRESS) values (3,'Leang',1111,'Male',to_date('09-DEC-22','DD-MON-RR'),'SR','0382667','SR');
Insert into LIBRARY.TBLUSER (USERID,USERNAME,PASSWORD,GENDER,DOB,POB,PHONE,ADDRESS) values (4,'Penh',1111,'Male',to_date('11-NOV-02','DD-MON-RR'),'KPK','017836','SR');
Insert into LIBRARY.TBLUSER (USERID,USERNAME,PASSWORD,GENDER,DOB,POB,PHONE,ADDRESS) values (5,'Kunthea',1111,'Male',to_date('20-DEC-22','DD-MON-RR'),'SR','016374','SR');
Insert into LIBRARY.TBLUSER (USERID,USERNAME,PASSWORD,GENDER,DOB,POB,PHONE,ADDRESS) values (1,'Khunhy',1111,'Male',null,'Siemreap','012345','Siemreap');
Insert into LIBRARY.TBLUSER (USERID,USERNAME,PASSWORD,GENDER,DOB,POB,PHONE,ADDRESS) values (21,'Darong',1111,'Male',to_date('27-APR-23','DD-MON-RR'),'SR','0382667','SR');
Insert into LIBRARY.TBLUSER (USERID,USERNAME,PASSWORD,GENDER,DOB,POB,PHONE,ADDRESS) values (24,'Mom Sokunthea',2222,'Male',to_date('09-DEC-22','DD-MON-RR'),'Chreav','012345678','St, 6, chreav village');
Insert into LIBRARY.TBLUSER (USERID,USERNAME,PASSWORD,GENDER,DOB,POB,PHONE,ADDRESS) values (41,'KunThea',1234,'male',to_date('16-DEC-20','DD-MON-RR'),'SiemReap','08556656555','Seimreap');
REM INSERTING into LIBRARY.VBOOK
SET DEFINE OFF;
Insert into LIBRARY.VBOOK (BOOKID,BOOKNAME,BOOKTYPE,CREATEYEAR,AUTHORNAME,CLOSET,FLOOR,CREATEBY,CREATEDATE,UPDATEBY,UPDATEDATE,PRICE,QTY,ISDELETED) values (41,'Love','roman',2023,'Penh','Closet A',2,'Leang',to_date('27-APR-23','DD-MON-RR'),null,null,'2',21,0);
Insert into LIBRARY.VBOOK (BOOKID,BOOKNAME,BOOKTYPE,CREATEYEAR,AUTHORNAME,CLOSET,FLOOR,CREATEBY,CREATEDATE,UPDATEBY,UPDATEDATE,PRICE,QTY,ISDELETED) values (2,'Protocol','Programming',2009,'Khunhy','Closet A',1,'Khunhy',to_date('15-DEC-22','DD-MON-RR'),'Khunhy',to_date('27-APR-23','DD-MON-RR'),'3',48,0);
Insert into LIBRARY.VBOOK (BOOKID,BOOKNAME,BOOKTYPE,CREATEYEAR,AUTHORNAME,CLOSET,FLOOR,CREATEBY,CREATEDATE,UPDATEBY,UPDATEDATE,PRICE,QTY,ISDELETED) values (4,'Laravel','Programming',1999,'Khunhy','Closet A',2,'Leang',to_date('15-DEC-22','DD-MON-RR'),null,null,'3',30,0);
Insert into LIBRARY.VBOOK (BOOKID,BOOKNAME,BOOKTYPE,CREATEYEAR,AUTHORNAME,CLOSET,FLOOR,CREATEBY,CREATEDATE,UPDATEBY,UPDATEDATE,PRICE,QTY,ISDELETED) values (1,'Java','Technology',2011,'Khunhy','Closet F',2,'Khunhy',to_date('15-DEC-22','DD-MON-RR'),'Khunhy',to_date('07-MAY-23','DD-MON-RR'),'3',50,0);
Insert into LIBRARY.VBOOK (BOOKID,BOOKNAME,BOOKTYPE,CREATEYEAR,AUTHORNAME,CLOSET,FLOOR,CREATEBY,CREATEDATE,UPDATEBY,UPDATEDATE,PRICE,QTY,ISDELETED) values (61,'Khmer 1975','History',2022,'Troeng Ngea','Closet C',5,'Khunhy',to_date('29-APR-23','DD-MON-RR'),null,null,'2',22,0);
REM INSERTING into LIBRARY.VBORROW
SET DEFINE OFF;
Insert into LIBRARY.VBORROW (BORROWID,USERNAME,BOOKNAME,PAY,QTY,BORROWDATE) values (4,'Leang','Protocol','Not Yet',7,to_date('17-DEC-22','DD-MON-RR'));
Insert into LIBRARY.VBORROW (BORROWID,USERNAME,BOOKNAME,PAY,QTY,BORROWDATE) values (1,'Khunhy','Protocol','Paid',1,to_date('17-DEC-22','DD-MON-RR'));
Insert into LIBRARY.VBORROW (BORROWID,USERNAME,BOOKNAME,PAY,QTY,BORROWDATE) values (5,'Khunhy','Protocol','Paid',6,to_date('19-DEC-22','DD-MON-RR'));
Insert into LIBRARY.VBORROW (BORROWID,USERNAME,BOOKNAME,PAY,QTY,BORROWDATE) values (41,'Khunhy','Protocol','?????????',1,to_date('07-MAY-23','DD-MON-RR'));
Insert into LIBRARY.VBORROW (BORROWID,USERNAME,BOOKNAME,PAY,QTY,BORROWDATE) values (42,'Khunhy','Protocol','?????????',1,to_date('07-MAY-23','DD-MON-RR'));
Insert into LIBRARY.VBORROW (BORROWID,USERNAME,BOOKNAME,PAY,QTY,BORROWDATE) values (11,'Khunhy','Khmer 1975','?????????',0,to_date('29-APR-23','DD-MON-RR'));
Insert into LIBRARY.VBORROW (BORROWID,USERNAME,BOOKNAME,PAY,QTY,BORROWDATE) values (21,'Khunhy','Khmer 1975','Paid',2,to_date('30-APR-23','DD-MON-RR'));
Insert into LIBRARY.VBORROW (BORROWID,USERNAME,BOOKNAME,PAY,QTY,BORROWDATE) values (3,'Khunhy','Laravel','Not Yet',3,to_date('17-DEC-22','DD-MON-RR'));
Insert into LIBRARY.VBORROW (BORROWID,USERNAME,BOOKNAME,PAY,QTY,BORROWDATE) values (6,'Khunhy','Laravel','Not Yet',7,to_date('19-DEC-22','DD-MON-RR'));
Insert into LIBRARY.VBORROW (BORROWID,USERNAME,BOOKNAME,PAY,QTY,BORROWDATE) values (9,'Khunhy','Love','Paid',1,to_date('27-APR-23','DD-MON-RR'));
Insert into LIBRARY.VBORROW (BORROWID,USERNAME,BOOKNAME,PAY,QTY,BORROWDATE) values (10,'Khunhy','Love','?????????',1,to_date('29-APR-23','DD-MON-RR'));
Insert into LIBRARY.VBORROW (BORROWID,USERNAME,BOOKNAME,PAY,QTY,BORROWDATE) values (8,'Khunhy','Love','Paid',1,to_date('27-APR-23','DD-MON-RR'));
Insert into LIBRARY.VBORROW (BORROWID,USERNAME,BOOKNAME,PAY,QTY,BORROWDATE) values (7,'Khunhy','Java','Paid',1,to_date('27-APR-23','DD-MON-RR'));
Insert into LIBRARY.VBORROW (BORROWID,USERNAME,BOOKNAME,PAY,QTY,BORROWDATE) values (2,'Khunhy','Java','Not Yet',5,to_date('17-DEC-22','DD-MON-RR'));
REM INSERTING into LIBRARY.VPAYMENT
SET DEFINE OFF;
Insert into LIBRARY.VPAYMENT (PAYMENTID,USERNAME,BOOKNAME,PAY,STUID,PRICE,PAYDATE,QTY) values (1,'Khunhy','Khmer 1975','?????????',3,2,to_date('29-APR-23','DD-MON-RR'),2);
Insert into LIBRARY.VPAYMENT (PAYMENTID,USERNAME,BOOKNAME,PAY,STUID,PRICE,PAYDATE,QTY) values (21,'Khunhy','Khmer 1975','Paid',3,2,to_date('30-APR-23','DD-MON-RR'),1);
Insert into LIBRARY.VPAYMENT (PAYMENTID,USERNAME,BOOKNAME,PAY,STUID,PRICE,PAYDATE,QTY) values (41,'Khunhy','Protocol','Paid',1,3,to_date('07-MAY-23','DD-MON-RR'),1);
REM INSERTING into LIBRARY.VRETURN
SET DEFINE OFF;
Insert into LIBRARY.VRETURN (RETURNID,USERNAME,BOOKNAME,PAY,RETURNDATE,QTY) values (2,'Leang','Laravel','?????????',to_date('17-DEC-22','DD-MON-RR'),1);
Insert into LIBRARY.VRETURN (RETURNID,USERNAME,BOOKNAME,PAY,RETURNDATE,QTY) values (5,'Khunhy','Khmer 1975','?????????',to_date('29-APR-23','DD-MON-RR'),2);
Insert into LIBRARY.VRETURN (RETURNID,USERNAME,BOOKNAME,PAY,RETURNDATE,QTY) values (6,'Khunhy','Khmer 1975','?????????',to_date('29-APR-23','DD-MON-RR'),2);
Insert into LIBRARY.VRETURN (RETURNID,USERNAME,BOOKNAME,PAY,RETURNDATE,QTY) values (22,'Khunhy','Khmer 1975','Paid',to_date('30-APR-23','DD-MON-RR'),1);
Insert into LIBRARY.VRETURN (RETURNID,USERNAME,BOOKNAME,PAY,RETURNDATE,QTY) values (23,'Khunhy','Khmer 1975','Paid',to_date('30-APR-23','DD-MON-RR'),1);
Insert into LIBRARY.VRETURN (RETURNID,USERNAME,BOOKNAME,PAY,RETURNDATE,QTY) values (1,'Khunhy','Love','?????????',to_date('27-APR-23','DD-MON-RR'),2);
Insert into LIBRARY.VRETURN (RETURNID,USERNAME,BOOKNAME,PAY,RETURNDATE,QTY) values (4,'Khunhy','Love','?????????',to_date('27-APR-23','DD-MON-RR'),2);
Insert into LIBRARY.VRETURN (RETURNID,USERNAME,BOOKNAME,PAY,RETURNDATE,QTY) values (24,'Khunhy','Love','?????????',to_date('30-APR-23','DD-MON-RR'),1);
Insert into LIBRARY.VRETURN (RETURNID,USERNAME,BOOKNAME,PAY,RETURNDATE,QTY) values (21,'Khunhy','Love','?????????',to_date('30-APR-23','DD-MON-RR'),1);
--------------------------------------------------------
--  DDL for Index PAYMENTDETAIL_PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "LIBRARY"."PAYMENTDETAIL_PK" ON "LIBRARY"."TBLPAYMENTDETAIL" ("PAYMENTDETAILID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index SYS_IL0000077309C00012$$
--------------------------------------------------------

  CREATE UNIQUE INDEX "LIBRARY"."SYS_IL0000077309C00012$$" ON "LIBRARY"."TBLBOOK" (
  PCTFREE 10 INITRANS 2 MAXTRANS 255 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" 
  PARALLEL (DEGREE 0 INSTANCES 0) ;
--------------------------------------------------------
--  DDL for Index SYS_IL0000077318C00009$$
--------------------------------------------------------

  CREATE UNIQUE INDEX "LIBRARY"."SYS_IL0000077318C00009$$" ON "LIBRARY"."TBLUSER" (
  PCTFREE 10 INITRANS 2 MAXTRANS 255 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" 
  PARALLEL (DEGREE 0 INSTANCES 0) ;
--------------------------------------------------------
--  DDL for Index SYS_IL0000077330C00007$$
--------------------------------------------------------

  CREATE UNIQUE INDEX "LIBRARY"."SYS_IL0000077330C00007$$" ON "LIBRARY"."TBLBORROW" (
  PCTFREE 10 INITRANS 2 MAXTRANS 255 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" 
  PARALLEL (DEGREE 0 INSTANCES 0) ;
--------------------------------------------------------
--  DDL for Index SYS_IL0000077335C00008$$
--------------------------------------------------------

  CREATE UNIQUE INDEX "LIBRARY"."SYS_IL0000077335C00008$$" ON "LIBRARY"."TBLPAYMENT" (
  PCTFREE 10 INITRANS 2 MAXTRANS 255 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" 
  PARALLEL (DEGREE 0 INSTANCES 0) ;
--------------------------------------------------------
--  DDL for Index SYS_IL0000077337C00007$$
--------------------------------------------------------

  CREATE UNIQUE INDEX "LIBRARY"."SYS_IL0000077337C00007$$" ON "LIBRARY"."TBLRETURN" (
  PCTFREE 10 INITRANS 2 MAXTRANS 255 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" 
  PARALLEL (DEGREE 0 INSTANCES 0) ;
--------------------------------------------------------
--  DDL for Index SYS_IL0000080889C00008$$
--------------------------------------------------------

  CREATE UNIQUE INDEX "LIBRARY"."SYS_IL0000080889C00008$$" ON "LIBRARY"."TBLSTUDENT" (
  PCTFREE 10 INITRANS 2 MAXTRANS 255 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" 
  PARALLEL (DEGREE 0 INSTANCES 0) ;
--------------------------------------------------------
--  DDL for Index TABLE1_PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "LIBRARY"."TABLE1_PK" ON "LIBRARY"."TBLSTUDENT" ("STUID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index TBLAUTHORID_PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "LIBRARY"."TBLAUTHORID_PK" ON "LIBRARY"."TBLAUTHOR" ("AUTHORID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index TBLBOOKTYPE_PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "LIBRARY"."TBLBOOKTYPE_PK" ON "LIBRARY"."TBLBOOKTYPE" ("BOOKTYPEID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index TBLBOOK_PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "LIBRARY"."TBLBOOK_PK" ON "LIBRARY"."TBLBOOK" ("BOOKID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index TBLBORROW_PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "LIBRARY"."TBLBORROW_PK" ON "LIBRARY"."TBLBORROW" ("BORROWID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index TBLCOMPARE_PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "LIBRARY"."TBLCOMPARE_PK" ON "LIBRARY"."TBLBOOKCLOSET" ("CLOSETID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index TBLPAYMENT_PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "LIBRARY"."TBLPAYMENT_PK" ON "LIBRARY"."TBLPAYMENT" ("PAYMENTID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index TBLRETURN_PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "LIBRARY"."TBLRETURN_PK" ON "LIBRARY"."TBLRETURN" ("RETURNID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index TBLUSER_PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "LIBRARY"."TBLUSER_PK" ON "LIBRARY"."TBLUSER" ("USERID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index TBLAUTHORID_PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "LIBRARY"."TBLAUTHORID_PK" ON "LIBRARY"."TBLAUTHOR" ("AUTHORID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index TBLBOOK_PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "LIBRARY"."TBLBOOK_PK" ON "LIBRARY"."TBLBOOK" ("BOOKID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index TBLCOMPARE_PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "LIBRARY"."TBLCOMPARE_PK" ON "LIBRARY"."TBLBOOKCLOSET" ("CLOSETID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index TBLBOOKTYPE_PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "LIBRARY"."TBLBOOKTYPE_PK" ON "LIBRARY"."TBLBOOKTYPE" ("BOOKTYPEID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index TBLBORROW_PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "LIBRARY"."TBLBORROW_PK" ON "LIBRARY"."TBLBORROW" ("BORROWID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index TBLPAYMENT_PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "LIBRARY"."TBLPAYMENT_PK" ON "LIBRARY"."TBLPAYMENT" ("PAYMENTID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index PAYMENTDETAIL_PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "LIBRARY"."PAYMENTDETAIL_PK" ON "LIBRARY"."TBLPAYMENTDETAIL" ("PAYMENTDETAILID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index TBLRETURN_PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "LIBRARY"."TBLRETURN_PK" ON "LIBRARY"."TBLRETURN" ("RETURNID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index TABLE1_PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "LIBRARY"."TABLE1_PK" ON "LIBRARY"."TBLSTUDENT" ("STUID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index TBLUSER_PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "LIBRARY"."TBLUSER_PK" ON "LIBRARY"."TBLUSER" ("USERID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Trigger TBLAUTHOR_TRG
--------------------------------------------------------

  CREATE OR REPLACE EDITIONABLE TRIGGER "LIBRARY"."TBLAUTHOR_TRG" 
BEFORE INSERT ON TBLAUTHOR 
FOR EACH ROW 
BEGIN
  <<COLUMN_SEQUENCES>>
  BEGIN
    IF INSERTING AND :NEW.AUTHORID IS NULL THEN
      SELECT TBLAUTHOR_SEQ.NEXTVAL INTO :NEW.AUTHORID FROM SYS.DUAL;
    END IF;
  END COLUMN_SEQUENCES;
END;
/
ALTER TRIGGER "LIBRARY"."TBLAUTHOR_TRG" ENABLE;
--------------------------------------------------------
--  DDL for Trigger TBLBOOKCLOSET_TRG
--------------------------------------------------------

  CREATE OR REPLACE EDITIONABLE TRIGGER "LIBRARY"."TBLBOOKCLOSET_TRG" 
BEFORE INSERT ON TBLBOOKCLOSET 
FOR EACH ROW 
BEGIN
  <<COLUMN_SEQUENCES>>
  BEGIN
    IF INSERTING AND :NEW.CLOSETID IS NULL THEN
      SELECT TBLBOOKCLOSET_SEQ.NEXTVAL INTO :NEW.CLOSETID FROM SYS.DUAL;
    END IF;
  END COLUMN_SEQUENCES;
END;
/
ALTER TRIGGER "LIBRARY"."TBLBOOKCLOSET_TRG" ENABLE;
--------------------------------------------------------
--  DDL for Trigger TBLBOOKTYPE_TRG
--------------------------------------------------------

  CREATE OR REPLACE EDITIONABLE TRIGGER "LIBRARY"."TBLBOOKTYPE_TRG" 
BEFORE INSERT ON TBLBOOKTYPE 
FOR EACH ROW 
BEGIN
  <<COLUMN_SEQUENCES>>
  BEGIN
    IF INSERTING AND :NEW.BOOKTYPEID IS NULL THEN
      SELECT TBLBOOKTYPE_SEQ.NEXTVAL INTO :NEW.BOOKTYPEID FROM SYS.DUAL;
    END IF;
  END COLUMN_SEQUENCES;
END;
/
ALTER TRIGGER "LIBRARY"."TBLBOOKTYPE_TRG" ENABLE;
--------------------------------------------------------
--  DDL for Trigger TBLBOOK_TRG
--------------------------------------------------------

  CREATE OR REPLACE EDITIONABLE TRIGGER "LIBRARY"."TBLBOOK_TRG" 
BEFORE INSERT ON TBLBOOK 
FOR EACH ROW 
BEGIN
  <<COLUMN_SEQUENCES>>
  BEGIN
    IF INSERTING AND :NEW.BOOKID IS NULL THEN
      SELECT TBLBOOK_SEQ.NEXTVAL INTO :NEW.BOOKID FROM SYS.DUAL;
    END IF;
  END COLUMN_SEQUENCES;
END;
/
ALTER TRIGGER "LIBRARY"."TBLBOOK_TRG" ENABLE;
--------------------------------------------------------
--  DDL for Trigger TBLBORROW_TRG
--------------------------------------------------------

  CREATE OR REPLACE EDITIONABLE TRIGGER "LIBRARY"."TBLBORROW_TRG" 
BEFORE INSERT ON TBLBORROW 
FOR EACH ROW 
BEGIN
  <<COLUMN_SEQUENCES>>
  BEGIN
    NULL;
  END COLUMN_SEQUENCES;
END;
/
ALTER TRIGGER "LIBRARY"."TBLBORROW_TRG" ENABLE;
--------------------------------------------------------
--  DDL for Trigger TBLBORROW_TRG1
--------------------------------------------------------

  CREATE OR REPLACE EDITIONABLE TRIGGER "LIBRARY"."TBLBORROW_TRG1" 
BEFORE INSERT ON TBLBORROW 
FOR EACH ROW 
BEGIN
  <<COLUMN_SEQUENCES>>
  BEGIN
    NULL;
  END COLUMN_SEQUENCES;
END;
/
ALTER TRIGGER "LIBRARY"."TBLBORROW_TRG1" ENABLE;
--------------------------------------------------------
--  DDL for Trigger TBLBORROW_TRG2
--------------------------------------------------------

  CREATE OR REPLACE EDITIONABLE TRIGGER "LIBRARY"."TBLBORROW_TRG2" 
BEFORE INSERT ON TBLBORROW 
FOR EACH ROW 
BEGIN
  <<COLUMN_SEQUENCES>>
  BEGIN
    NULL;
  END COLUMN_SEQUENCES;
END;
/
ALTER TRIGGER "LIBRARY"."TBLBORROW_TRG2" ENABLE;
--------------------------------------------------------
--  DDL for Trigger TBLBORROW_TRG3
--------------------------------------------------------

  CREATE OR REPLACE EDITIONABLE TRIGGER "LIBRARY"."TBLBORROW_TRG3" 
BEFORE INSERT ON TBLBORROW 
FOR EACH ROW 
BEGIN
  <<COLUMN_SEQUENCES>>
  BEGIN
    NULL;
  END COLUMN_SEQUENCES;
END;
/
ALTER TRIGGER "LIBRARY"."TBLBORROW_TRG3" ENABLE;
--------------------------------------------------------
--  DDL for Trigger TBLBORROW_TRG4
--------------------------------------------------------

  CREATE OR REPLACE EDITIONABLE TRIGGER "LIBRARY"."TBLBORROW_TRG4" 
BEFORE INSERT ON TBLBORROW 
FOR EACH ROW 
BEGIN
  <<COLUMN_SEQUENCES>>
  BEGIN
    IF INSERTING AND :NEW.BORROWID IS NULL THEN
      SELECT TBLBORROW_SEQ5.NEXTVAL INTO :NEW.BORROWID FROM SYS.DUAL;
    END IF;
  END COLUMN_SEQUENCES;
END;
/
ALTER TRIGGER "LIBRARY"."TBLBORROW_TRG4" ENABLE;
--------------------------------------------------------
--  DDL for Trigger TBLPAYMENT_TRG
--------------------------------------------------------

  CREATE OR REPLACE EDITIONABLE TRIGGER "LIBRARY"."TBLPAYMENT_TRG" 
BEFORE INSERT ON TBLPAYMENT 
FOR EACH ROW 
BEGIN
  <<COLUMN_SEQUENCES>>
  BEGIN
    NULL;
  END COLUMN_SEQUENCES;
END;
/
ALTER TRIGGER "LIBRARY"."TBLPAYMENT_TRG" ENABLE;
--------------------------------------------------------
--  DDL for Trigger TBLPAYMENT_TRG1
--------------------------------------------------------

  CREATE OR REPLACE EDITIONABLE TRIGGER "LIBRARY"."TBLPAYMENT_TRG1" 
BEFORE INSERT ON TBLPAYMENT 
FOR EACH ROW 
BEGIN
  <<COLUMN_SEQUENCES>>
  BEGIN
    IF INSERTING AND :NEW.PAYMENTID IS NULL THEN
      SELECT TBLPAYMENT_SEQ2.NEXTVAL INTO :NEW.PAYMENTID FROM SYS.DUAL;
    END IF;
  END COLUMN_SEQUENCES;
END;
/
ALTER TRIGGER "LIBRARY"."TBLPAYMENT_TRG1" ENABLE;
--------------------------------------------------------
--  DDL for Trigger TBLRETURN_TRG
--------------------------------------------------------

  CREATE OR REPLACE EDITIONABLE TRIGGER "LIBRARY"."TBLRETURN_TRG" 
BEFORE INSERT ON TBLRETURN 
FOR EACH ROW 
BEGIN
  <<COLUMN_SEQUENCES>>
  BEGIN
    NULL;
  END COLUMN_SEQUENCES;
END;
/
ALTER TRIGGER "LIBRARY"."TBLRETURN_TRG" ENABLE;
--------------------------------------------------------
--  DDL for Trigger TBLRETURN_TRG1
--------------------------------------------------------

  CREATE OR REPLACE EDITIONABLE TRIGGER "LIBRARY"."TBLRETURN_TRG1" 
BEFORE INSERT ON TBLRETURN 
FOR EACH ROW 
BEGIN
  <<COLUMN_SEQUENCES>>
  BEGIN
    NULL;
  END COLUMN_SEQUENCES;
END;
/
ALTER TRIGGER "LIBRARY"."TBLRETURN_TRG1" ENABLE;
--------------------------------------------------------
--  DDL for Trigger TBLRETURN_TRG2
--------------------------------------------------------

  CREATE OR REPLACE EDITIONABLE TRIGGER "LIBRARY"."TBLRETURN_TRG2" 
BEFORE INSERT ON TBLRETURN 
FOR EACH ROW 
BEGIN
  <<COLUMN_SEQUENCES>>
  BEGIN
    NULL;
  END COLUMN_SEQUENCES;
END;
/
ALTER TRIGGER "LIBRARY"."TBLRETURN_TRG2" ENABLE;
--------------------------------------------------------
--  DDL for Trigger TBLRETURN_TRG3
--------------------------------------------------------

  CREATE OR REPLACE EDITIONABLE TRIGGER "LIBRARY"."TBLRETURN_TRG3" 
BEFORE INSERT ON TBLRETURN 
FOR EACH ROW 
BEGIN
  <<COLUMN_SEQUENCES>>
  BEGIN
    NULL;
  END COLUMN_SEQUENCES;
END;
/
ALTER TRIGGER "LIBRARY"."TBLRETURN_TRG3" ENABLE;
--------------------------------------------------------
--  DDL for Trigger TBLRETURN_TRG4
--------------------------------------------------------

  CREATE OR REPLACE EDITIONABLE TRIGGER "LIBRARY"."TBLRETURN_TRG4" 
BEFORE INSERT ON TBLRETURN 
FOR EACH ROW 
BEGIN
  <<COLUMN_SEQUENCES>>
  BEGIN
    IF INSERTING AND :NEW.RETURNID IS NULL THEN
      SELECT TBLRETURN_SEQ6.NEXTVAL INTO :NEW.RETURNID FROM SYS.DUAL;
    END IF;
  END COLUMN_SEQUENCES;
END;
/
ALTER TRIGGER "LIBRARY"."TBLRETURN_TRG4" ENABLE;
--------------------------------------------------------
--  DDL for Trigger TBLUSER_TRG
--------------------------------------------------------

  CREATE OR REPLACE EDITIONABLE TRIGGER "LIBRARY"."TBLUSER_TRG" 
BEFORE INSERT ON TBLUSER 
FOR EACH ROW 
BEGIN
  <<COLUMN_SEQUENCES>>
  BEGIN
    IF INSERTING AND :NEW.USERID IS NULL THEN
      SELECT TBLUSER_SEQ2.NEXTVAL INTO :NEW.USERID FROM SYS.DUAL;
    END IF;
  END COLUMN_SEQUENCES;
END;
/
ALTER TRIGGER "LIBRARY"."TBLUSER_TRG" ENABLE;
--------------------------------------------------------
--  DDL for Trigger TRIGGER_BORROW
--------------------------------------------------------

  CREATE OR REPLACE EDITIONABLE TRIGGER "LIBRARY"."TRIGGER_BORROW" After Insert or UPDATE or DELETE
On tblBorrow
For Each Row
BEGIN
	IF Inserting Then
        Update tblBook set Qty = Qty - : new.Qty
        Where BookID=:new.BookId;
        End If;

End;

/
ALTER TRIGGER "LIBRARY"."TRIGGER_BORROW" ENABLE;
--------------------------------------------------------
--  DDL for Trigger TRIGGER_RETURN
--------------------------------------------------------

  CREATE OR REPLACE EDITIONABLE TRIGGER "LIBRARY"."TRIGGER_RETURN" 
After Insert or UPDATE or DELETE
On tblReturn
For Each Row
BEGIN
	IF Inserting Then
        Update tblBook set Qty = Qty + : new.Qty
        Where BookID=:new.BookId;
        End If;

End;

/
ALTER TRIGGER "LIBRARY"."TRIGGER_RETURN" ENABLE;
--------------------------------------------------------
--  DDL for Trigger TRIGGER_ReturnBack
--------------------------------------------------------

  CREATE OR REPLACE EDITIONABLE TRIGGER "LIBRARY"."TRIGGER_ReturnBack" After Insert or UPDATE or DELETE
On tblReturn
For Each Row
BEGIN
	IF Inserting Then
        Update tblBorrow set Qty = Qty - : new.Qty
        Where BorrowID=:new.bookId;
        End If;

End;
/
ALTER TRIGGER "LIBRARY"."TRIGGER_ReturnBack" ENABLE;
--------------------------------------------------------
--  DDL for Trigger TBLAUTHOR_TRG
--------------------------------------------------------

  CREATE OR REPLACE EDITIONABLE TRIGGER "LIBRARY"."TBLAUTHOR_TRG" 
BEFORE INSERT ON TBLAUTHOR 
FOR EACH ROW 
BEGIN
  <<COLUMN_SEQUENCES>>
  BEGIN
    IF INSERTING AND :NEW.AUTHORID IS NULL THEN
      SELECT TBLAUTHOR_SEQ.NEXTVAL INTO :NEW.AUTHORID FROM SYS.DUAL;
    END IF;
  END COLUMN_SEQUENCES;
END;
/
ALTER TRIGGER "LIBRARY"."TBLAUTHOR_TRG" ENABLE;
--------------------------------------------------------
--  DDL for Trigger TBLBOOK_TRG
--------------------------------------------------------

  CREATE OR REPLACE EDITIONABLE TRIGGER "LIBRARY"."TBLBOOK_TRG" 
BEFORE INSERT ON TBLBOOK 
FOR EACH ROW 
BEGIN
  <<COLUMN_SEQUENCES>>
  BEGIN
    IF INSERTING AND :NEW.BOOKID IS NULL THEN
      SELECT TBLBOOK_SEQ.NEXTVAL INTO :NEW.BOOKID FROM SYS.DUAL;
    END IF;
  END COLUMN_SEQUENCES;
END;
/
ALTER TRIGGER "LIBRARY"."TBLBOOK_TRG" ENABLE;
--------------------------------------------------------
--  DDL for Trigger TBLBOOKCLOSET_TRG
--------------------------------------------------------

  CREATE OR REPLACE EDITIONABLE TRIGGER "LIBRARY"."TBLBOOKCLOSET_TRG" 
BEFORE INSERT ON TBLBOOKCLOSET 
FOR EACH ROW 
BEGIN
  <<COLUMN_SEQUENCES>>
  BEGIN
    IF INSERTING AND :NEW.CLOSETID IS NULL THEN
      SELECT TBLBOOKCLOSET_SEQ.NEXTVAL INTO :NEW.CLOSETID FROM SYS.DUAL;
    END IF;
  END COLUMN_SEQUENCES;
END;
/
ALTER TRIGGER "LIBRARY"."TBLBOOKCLOSET_TRG" ENABLE;
--------------------------------------------------------
--  DDL for Trigger TBLBOOKTYPE_TRG
--------------------------------------------------------

  CREATE OR REPLACE EDITIONABLE TRIGGER "LIBRARY"."TBLBOOKTYPE_TRG" 
BEFORE INSERT ON TBLBOOKTYPE 
FOR EACH ROW 
BEGIN
  <<COLUMN_SEQUENCES>>
  BEGIN
    IF INSERTING AND :NEW.BOOKTYPEID IS NULL THEN
      SELECT TBLBOOKTYPE_SEQ.NEXTVAL INTO :NEW.BOOKTYPEID FROM SYS.DUAL;
    END IF;
  END COLUMN_SEQUENCES;
END;
/
ALTER TRIGGER "LIBRARY"."TBLBOOKTYPE_TRG" ENABLE;
--------------------------------------------------------
--  DDL for Trigger TBLBORROW_TRG1
--------------------------------------------------------

  CREATE OR REPLACE EDITIONABLE TRIGGER "LIBRARY"."TBLBORROW_TRG1" 
BEFORE INSERT ON TBLBORROW 
FOR EACH ROW 
BEGIN
  <<COLUMN_SEQUENCES>>
  BEGIN
    NULL;
  END COLUMN_SEQUENCES;
END;
/
ALTER TRIGGER "LIBRARY"."TBLBORROW_TRG1" ENABLE;
--------------------------------------------------------
--  DDL for Trigger TBLBORROW_TRG2
--------------------------------------------------------

  CREATE OR REPLACE EDITIONABLE TRIGGER "LIBRARY"."TBLBORROW_TRG2" 
BEFORE INSERT ON TBLBORROW 
FOR EACH ROW 
BEGIN
  <<COLUMN_SEQUENCES>>
  BEGIN
    NULL;
  END COLUMN_SEQUENCES;
END;
/
ALTER TRIGGER "LIBRARY"."TBLBORROW_TRG2" ENABLE;
--------------------------------------------------------
--  DDL for Trigger TRIGGER_BORROW
--------------------------------------------------------

  CREATE OR REPLACE EDITIONABLE TRIGGER "LIBRARY"."TRIGGER_BORROW" After Insert or UPDATE or DELETE
On tblBorrow
For Each Row
BEGIN
	IF Inserting Then
        Update tblBook set Qty = Qty - : new.Qty
        Where BookID=:new.BookId;
        End If;

End;

/
ALTER TRIGGER "LIBRARY"."TRIGGER_BORROW" ENABLE;
--------------------------------------------------------
--  DDL for Trigger TBLBORROW_TRG3
--------------------------------------------------------

  CREATE OR REPLACE EDITIONABLE TRIGGER "LIBRARY"."TBLBORROW_TRG3" 
BEFORE INSERT ON TBLBORROW 
FOR EACH ROW 
BEGIN
  <<COLUMN_SEQUENCES>>
  BEGIN
    NULL;
  END COLUMN_SEQUENCES;
END;
/
ALTER TRIGGER "LIBRARY"."TBLBORROW_TRG3" ENABLE;
--------------------------------------------------------
--  DDL for Trigger TBLBORROW_TRG4
--------------------------------------------------------

  CREATE OR REPLACE EDITIONABLE TRIGGER "LIBRARY"."TBLBORROW_TRG4" 
BEFORE INSERT ON TBLBORROW 
FOR EACH ROW 
BEGIN
  <<COLUMN_SEQUENCES>>
  BEGIN
    IF INSERTING AND :NEW.BORROWID IS NULL THEN
      SELECT TBLBORROW_SEQ5.NEXTVAL INTO :NEW.BORROWID FROM SYS.DUAL;
    END IF;
  END COLUMN_SEQUENCES;
END;
/
ALTER TRIGGER "LIBRARY"."TBLBORROW_TRG4" ENABLE;
--------------------------------------------------------
--  DDL for Trigger TBLBORROW_TRG
--------------------------------------------------------

  CREATE OR REPLACE EDITIONABLE TRIGGER "LIBRARY"."TBLBORROW_TRG" 
BEFORE INSERT ON TBLBORROW 
FOR EACH ROW 
BEGIN
  <<COLUMN_SEQUENCES>>
  BEGIN
    NULL;
  END COLUMN_SEQUENCES;
END;
/
ALTER TRIGGER "LIBRARY"."TBLBORROW_TRG" ENABLE;
--------------------------------------------------------
--  DDL for Trigger TBLPAYMENT_TRG
--------------------------------------------------------

  CREATE OR REPLACE EDITIONABLE TRIGGER "LIBRARY"."TBLPAYMENT_TRG" 
BEFORE INSERT ON TBLPAYMENT 
FOR EACH ROW 
BEGIN
  <<COLUMN_SEQUENCES>>
  BEGIN
    NULL;
  END COLUMN_SEQUENCES;
END;
/
ALTER TRIGGER "LIBRARY"."TBLPAYMENT_TRG" ENABLE;
--------------------------------------------------------
--  DDL for Trigger TBLPAYMENT_TRG1
--------------------------------------------------------

  CREATE OR REPLACE EDITIONABLE TRIGGER "LIBRARY"."TBLPAYMENT_TRG1" 
BEFORE INSERT ON TBLPAYMENT 
FOR EACH ROW 
BEGIN
  <<COLUMN_SEQUENCES>>
  BEGIN
    IF INSERTING AND :NEW.PAYMENTID IS NULL THEN
      SELECT TBLPAYMENT_SEQ2.NEXTVAL INTO :NEW.PAYMENTID FROM SYS.DUAL;
    END IF;
  END COLUMN_SEQUENCES;
END;
/
ALTER TRIGGER "LIBRARY"."TBLPAYMENT_TRG1" ENABLE;
--------------------------------------------------------
--  DDL for Trigger TBLRETURN_TRG
--------------------------------------------------------

  CREATE OR REPLACE EDITIONABLE TRIGGER "LIBRARY"."TBLRETURN_TRG" 
BEFORE INSERT ON TBLRETURN 
FOR EACH ROW 
BEGIN
  <<COLUMN_SEQUENCES>>
  BEGIN
    NULL;
  END COLUMN_SEQUENCES;
END;
/
ALTER TRIGGER "LIBRARY"."TBLRETURN_TRG" ENABLE;
--------------------------------------------------------
--  DDL for Trigger TBLRETURN_TRG1
--------------------------------------------------------

  CREATE OR REPLACE EDITIONABLE TRIGGER "LIBRARY"."TBLRETURN_TRG1" 
BEFORE INSERT ON TBLRETURN 
FOR EACH ROW 
BEGIN
  <<COLUMN_SEQUENCES>>
  BEGIN
    NULL;
  END COLUMN_SEQUENCES;
END;
/
ALTER TRIGGER "LIBRARY"."TBLRETURN_TRG1" ENABLE;
--------------------------------------------------------
--  DDL for Trigger TBLRETURN_TRG2
--------------------------------------------------------

  CREATE OR REPLACE EDITIONABLE TRIGGER "LIBRARY"."TBLRETURN_TRG2" 
BEFORE INSERT ON TBLRETURN 
FOR EACH ROW 
BEGIN
  <<COLUMN_SEQUENCES>>
  BEGIN
    NULL;
  END COLUMN_SEQUENCES;
END;
/
ALTER TRIGGER "LIBRARY"."TBLRETURN_TRG2" ENABLE;
--------------------------------------------------------
--  DDL for Trigger TBLRETURN_TRG4
--------------------------------------------------------

  CREATE OR REPLACE EDITIONABLE TRIGGER "LIBRARY"."TBLRETURN_TRG4" 
BEFORE INSERT ON TBLRETURN 
FOR EACH ROW 
BEGIN
  <<COLUMN_SEQUENCES>>
  BEGIN
    IF INSERTING AND :NEW.RETURNID IS NULL THEN
      SELECT TBLRETURN_SEQ6.NEXTVAL INTO :NEW.RETURNID FROM SYS.DUAL;
    END IF;
  END COLUMN_SEQUENCES;
END;
/
ALTER TRIGGER "LIBRARY"."TBLRETURN_TRG4" ENABLE;
--------------------------------------------------------
--  DDL for Trigger TRIGGER_RETURN
--------------------------------------------------------

  CREATE OR REPLACE EDITIONABLE TRIGGER "LIBRARY"."TRIGGER_RETURN" 
After Insert or UPDATE or DELETE
On tblReturn
For Each Row
BEGIN
	IF Inserting Then
        Update tblBook set Qty = Qty + : new.Qty
        Where BookID=:new.BookId;
        End If;

End;

/
ALTER TRIGGER "LIBRARY"."TRIGGER_RETURN" ENABLE;
--------------------------------------------------------
--  DDL for Trigger TBLRETURN_TRG3
--------------------------------------------------------

  CREATE OR REPLACE EDITIONABLE TRIGGER "LIBRARY"."TBLRETURN_TRG3" 
BEFORE INSERT ON TBLRETURN 
FOR EACH ROW 
BEGIN
  <<COLUMN_SEQUENCES>>
  BEGIN
    NULL;
  END COLUMN_SEQUENCES;
END;
/
ALTER TRIGGER "LIBRARY"."TBLRETURN_TRG3" ENABLE;
--------------------------------------------------------
--  DDL for Trigger TRIGGER_ReturnBack
--------------------------------------------------------

  CREATE OR REPLACE EDITIONABLE TRIGGER "LIBRARY"."TRIGGER_ReturnBack" After Insert or UPDATE or DELETE
On tblReturn
For Each Row
BEGIN
	IF Inserting Then
        Update tblBorrow set Qty = Qty - : new.Qty
        Where BorrowID=:new.bookId;
        End If;

End;
/
ALTER TRIGGER "LIBRARY"."TRIGGER_ReturnBack" ENABLE;
--------------------------------------------------------
--  DDL for Trigger TBLUSER_TRG
--------------------------------------------------------

  CREATE OR REPLACE EDITIONABLE TRIGGER "LIBRARY"."TBLUSER_TRG" 
BEFORE INSERT ON TBLUSER 
FOR EACH ROW 
BEGIN
  <<COLUMN_SEQUENCES>>
  BEGIN
    IF INSERTING AND :NEW.USERID IS NULL THEN
      SELECT TBLUSER_SEQ2.NEXTVAL INTO :NEW.USERID FROM SYS.DUAL;
    END IF;
  END COLUMN_SEQUENCES;
END;
/
ALTER TRIGGER "LIBRARY"."TBLUSER_TRG" ENABLE;
--------------------------------------------------------
--  DDL for Procedure ADDAUTHOR
--------------------------------------------------------
set define off;

  CREATE OR REPLACE EDITIONABLE PROCEDURE "LIBRARY"."ADDAUTHOR" (
--parameter of store procedure
 vaname tblauthor.authorname%TYPE,
 vagender tblauthor.gender%TYPE,
 vaddress tblauthor.address%TYPE,
 vaphone tblauthor.phone%TYPE
)
is
    
BEGIN
    insert into tblauthor(authorname,gender,address,phone)
    VALUES(vaname,vagender,vaddress,vaphone);
end;



/
--------------------------------------------------------
--  DDL for Procedure ADDBOOK
--------------------------------------------------------
set define off;

  CREATE OR REPLACE EDITIONABLE PROCEDURE "LIBRARY"."ADDBOOK" (
--parameter of store procedure
 vbname tblbook.bookname%TYPE,
 vbtype tblbook.booktypeid%TYPE,
 vbyear tblbook.createyear%TYPE,
 vbauthor tblbook.authorid%TYPE,
 vbcloset tblbook.closetid%TYPE,
 vbfloor tblbook.floor%TYPE,
 vbby tblbook.createby%TYPE,
 vbdate tblbook.createdate%TYPE,
 vbprice tblbook.price%TYPE,
 vbqty tblbook.qty%TYPE,
 vbimage tblbook.image%TYPE
)
is
    
BEGIN
    insert into tblbook(bookname,booktypeid,createyear,authorid,closetid,
    floor,createby,createdate,price,qty,image)
    VALUES(vbname,vbtype,vbyear,vbauthor,vbcloset,vbfloor,vbby,vbdate,vbprice,vbqty,vbimage);
end;



/
--------------------------------------------------------
--  DDL for Procedure ADDBOOKTYPE
--------------------------------------------------------
set define off;

  CREATE OR REPLACE EDITIONABLE PROCEDURE "LIBRARY"."ADDBOOKTYPE" (
--parameter of store procedure
 vbooktype tblbooktype.booktype%TYPE,
 vdesc tblbooktype.description%TYPE
)
is
    
BEGIN
    insert into tblbooktype(booktype,description)
    VALUES(vbooktype,vdesc);
end;



/
--------------------------------------------------------
--  DDL for Procedure ADDBORROW
--------------------------------------------------------
set define off;

  CREATE OR REPLACE EDITIONABLE PROCEDURE "LIBRARY"."ADDBORROW" (
--parameter of store procedure
 vuserid tblborrow.userid%TYPE,
 vbookid tblborrow.bookid%TYPE,
 vqty tblborrow.qty%TYPE,
 vpayid tblborrow.paymentdetailid%TYPE,
 vimage tblborrow.image%TYPE,
 vstuid tblborrow.Stuid%TYPE,
 vprice tblborrow.Price%TYPE
)
is
    
BEGIN
    insert into tblborrow(userid,bookid,qty,paymentdetailid,image,Stuid,Price)
    VALUES(vuserid,vbookid,vqty,vpayid,vimage,vstuid,vprice);
end;

/
--------------------------------------------------------
--  DDL for Procedure ADDCLOSET
--------------------------------------------------------
set define off;

  CREATE OR REPLACE EDITIONABLE PROCEDURE "LIBRARY"."ADDCLOSET" (
--parameter of store procedure
 vcloset tblbookcloset.closet%TYPE
)
is
    
BEGIN
    insert into tblbookcloset(closet)
    VALUES(vcloset);
end;



/
--------------------------------------------------------
--  DDL for Procedure ADDPAYDETAILS
--------------------------------------------------------
set define off;

  CREATE OR REPLACE EDITIONABLE PROCEDURE "LIBRARY"."ADDPAYDETAILS" (
--parameter of store procedure
 vpay tblpaymentdetail.pay%TYPE
)
is
    
BEGIN
    insert into tblpaymentdetail(pay)
    VALUES(vpay);
end;



/
--------------------------------------------------------
--  DDL for Procedure ADDPAYMENT
--------------------------------------------------------
set define off;

  CREATE OR REPLACE EDITIONABLE PROCEDURE "LIBRARY"."ADDPAYMENT" (
--parameter of store procedure
 vbookid tblpayment.bookid%TYPE,
 vuserid tblpayment.userid%TYPE,
 vpayid tblpayment.paymentdetailid%TYPE,
 vstuid tblpayment.stuid%TYPE,
 vprice tblpayment.price%TYPE,
 vimage tblpayment.image%TYPE,
 vqty tblpayment.qty%TYPE
)
is
    
BEGIN
    insert into tblpayment(bookid,userid,paymentdetailid,stuid,price,image,qty)
    VALUES(vbookid,vuserid,vpayid,vstuid,vprice,vimage,vqty);
end;

/
--------------------------------------------------------
--  DDL for Procedure ADDRETURN
--------------------------------------------------------
set define off;

  CREATE OR REPLACE EDITIONABLE PROCEDURE "LIBRARY"."ADDRETURN" (
--parameter of store procedure
 vuserid tblreturn.userid%TYPE,
 vbookid tblreturn.bookid%TYPE,
 vpayid tblreturn.paymentdetailid%TYPE,
 vrqty tblreturn.qty%TYPE,
 vimage tblreturn.image%Type,
 vstuid tblreturn.stuid%TYPE,
 vstatus tblreturn.status%TYPE,
 vprice tblreturn.Price%TYPE
)
is
    
BEGIN
    insert into tblreturn(userid,bookid,qty,paymentdetailid,image,stuid,status,Price)
    VALUES(vuserid,vbookid,vrqty,vpayid,vimage,vstuid,vstatus,vprice);
end;

/
--------------------------------------------------------
--  DDL for Procedure ADDSTUDENT
--------------------------------------------------------
set define off;

  CREATE OR REPLACE EDITIONABLE PROCEDURE "LIBRARY"."ADDSTUDENT" (
--parameter of store procedure
 vsname tblStudent.stuname%TYPE,
 vgender tblStudent.gender%TYPE,
 vphone tblStudent.PhoneNumber%TYPE,
 vaddress tblStudent.address%TYPE,
 vcollege tblstudent.college%TYPE,
 vyear tblStudent.Syear%TYPE,
 vphoto tblStudent.photo%TYPE
)
is
    
BEGIN
    insert into tblStudent(stuname,gender,PhoneNumber,address,college,Syear,photo)
    VALUES(vsname,vgender,vphone,vaddress,vcollege,vyear,vphoto);

end;

/
--------------------------------------------------------
--  DDL for Procedure ADDUSER
--------------------------------------------------------
set define off;

  CREATE OR REPLACE EDITIONABLE PROCEDURE "LIBRARY"."ADDUSER" (
--parameter of store procedure
 vname tbluser.username%TYPE,
 vpass tbluser.password%TYPE,
 vgender tbluser.gender%TYPE,
 vdob tbluser.dob%TYPE,
 vpob tbluser.pob%TYPE,
 vphone tbluser.Phone%TYPE,
 vaddress tbluser.address%TYPE,
 vphoto tbluser.photo%TYPE
)
is
    
BEGIN
    insert into tbluser(username,password,gender,dob,pob,phone,address,photo)
    VALUES(vname,vpass,vgender,vdob,vpob,vphone,vaddress,vphoto);

end;



/
--------------------------------------------------------
--  DDL for Procedure DELETEAUTHOR
--------------------------------------------------------
set define off;

  CREATE OR REPLACE EDITIONABLE PROCEDURE "LIBRARY"."DELETEAUTHOR" (
 vauthorid in tblauthor.authorid%TYPE
)
IS
BEGIN
	Delete from tblauthor  where authorid = vauthorid;
    commit;

End;



/
--------------------------------------------------------
--  DDL for Procedure DELETEBOOK
--------------------------------------------------------
set define off;

  CREATE OR REPLACE EDITIONABLE PROCEDURE "LIBRARY"."DELETEBOOK" (
 vbookid in tblbook.bookid%TYPE
)
IS
BEGIN
	Delete from tblbook  where bookid = vbookid;
    commit;

End;



/
--------------------------------------------------------
--  DDL for Procedure DELETEBOOKTYPE
--------------------------------------------------------
set define off;

  CREATE OR REPLACE EDITIONABLE PROCEDURE "LIBRARY"."DELETEBOOKTYPE" (
 vtypeid in tblbooktype.booktypeid%TYPE
)
IS
BEGIN
	Delete from tblbooktype  where booktypeid = vtypeid;
    commit;

End;



/
--------------------------------------------------------
--  DDL for Procedure DELETEBORROW
--------------------------------------------------------
set define off;

  CREATE OR REPLACE EDITIONABLE PROCEDURE "LIBRARY"."DELETEBORROW" (
 vborrowid in tblborrow.borrowid%TYPE
)
IS
BEGIN
	Delete from tblborrow  where borrowid = vborrowid;
    commit;

End;

/
--------------------------------------------------------
--  DDL for Procedure DELETECLOSET
--------------------------------------------------------
set define off;

  CREATE OR REPLACE EDITIONABLE PROCEDURE "LIBRARY"."DELETECLOSET" (
 vclosetid in tblbookcloset.closetid%TYPE
)
IS
BEGIN
	Delete from tblbookcloset  where closetid = vclosetid;
    commit;

End;



/
--------------------------------------------------------
--  DDL for Procedure DELETEPAY
--------------------------------------------------------
set define off;

  CREATE OR REPLACE EDITIONABLE PROCEDURE "LIBRARY"."DELETEPAY" (
 vpayid in tblpaymentdetail.paymentdetailid%TYPE
)
IS
BEGIN
	Delete from tblpaymentdetail  where paymentdetailid = vpayid;
    commit;

End;



/
--------------------------------------------------------
--  DDL for Procedure DELETEPAYMENT
--------------------------------------------------------
set define off;

  CREATE OR REPLACE EDITIONABLE PROCEDURE "LIBRARY"."DELETEPAYMENT" (
 vpaymentid in tblpayment.paymentid%TYPE
)
IS
BEGIN
	Delete from tblpayment  where paymentid = vpaymentid;
    commit;

End;

/
--------------------------------------------------------
--  DDL for Procedure DELETERETURN
--------------------------------------------------------
set define off;

  CREATE OR REPLACE EDITIONABLE PROCEDURE "LIBRARY"."DELETERETURN" (
 vreturnid in tblreturn.returnid%TYPE
)
IS
BEGIN
	Delete from tblreturn  where returnid = vreturnid;
    commit;

End;

/
--------------------------------------------------------
--  DDL for Procedure DELETESTUDENT
--------------------------------------------------------
set define off;

  CREATE OR REPLACE EDITIONABLE PROCEDURE "LIBRARY"."DELETESTUDENT" (
 vstuid in tblStudent.Stuid%TYPE
)
IS
BEGIN
	Delete from tblStudent  where Stuid = vstuid;
    commit;

End;

/
--------------------------------------------------------
--  DDL for Procedure DELETEUSER
--------------------------------------------------------
set define off;

  CREATE OR REPLACE EDITIONABLE PROCEDURE "LIBRARY"."DELETEUSER" (
 vuserid in tbluser.userid%TYPE
)
IS
BEGIN
	Delete from tbluser  where userid = vuserid;
    commit;

End;



/
--------------------------------------------------------
--  DDL for Procedure SEARCHAUTHOR
--------------------------------------------------------
set define off;

  CREATE OR REPLACE EDITIONABLE PROCEDURE "LIBRARY"."SEARCHAUTHOR" (
    vaname VARCHAR2
)
Is
    -- variable declareation
    c1 SYS_REFCURSOR;
BEGIN
    open c1 FOR 
    SELECT * FROM tblauthor where Upper(authorname) LIKE '%' || upper(vaname) || '%';
    dbms_sql.return_result(c1);

End;



/
--------------------------------------------------------
--  DDL for Procedure SEARCHBOOK
--------------------------------------------------------
set define off;

  CREATE OR REPLACE EDITIONABLE PROCEDURE "LIBRARY"."SEARCHBOOK" (
    vbname VARCHAR2
)
Is
    -- variable declareation
    c1 SYS_REFCURSOR;
BEGIN
    open c1 FOR 
    SELECT * FROM tblbook where Upper(bookname) LIKE '%' || upper(vbname) || '%';
    dbms_sql.return_result(c1);

End;



/
--------------------------------------------------------
--  DDL for Procedure SEARCHBOOKTYPE
--------------------------------------------------------
set define off;

  CREATE OR REPLACE EDITIONABLE PROCEDURE "LIBRARY"."SEARCHBOOKTYPE" (
    vbtype VARCHAR2
)
Is
    -- variable declareation
    c1 SYS_REFCURSOR;
BEGIN
    open c1 FOR 
    SELECT * FROM tblBooktype where Upper(booktype) LIKE '%' || upper(vbtype) || '%';
    dbms_sql.return_result(c1);

End;



/
--------------------------------------------------------
--  DDL for Procedure SEARCHBORROW
--------------------------------------------------------
set define off;

  CREATE OR REPLACE EDITIONABLE PROCEDURE "LIBRARY"."SEARCHBORROW" (
    vborrow VARCHAR2
)
Is
    -- variable declareation
    c1 SYS_REFCURSOR;
BEGIN
    open c1 FOR 
    SELECT * FROM tblborrow where Upper(userid) LIKE '%' || upper(vborrow) || '%';
    dbms_sql.return_result(c1);

End;

/
--------------------------------------------------------
--  DDL for Procedure SEARCHCLOSET
--------------------------------------------------------
set define off;

  CREATE OR REPLACE EDITIONABLE PROCEDURE "LIBRARY"."SEARCHCLOSET" (
    vcloset VARCHAR2
)
Is
    -- variable declareation
    c1 SYS_REFCURSOR;
BEGIN
    open c1 FOR 
    SELECT * FROM tblbookcloset where Upper(closet) LIKE '%' || upper(vcloset) || '%';
    dbms_sql.return_result(c1);

End;



/
--------------------------------------------------------
--  DDL for Procedure SEARCHPAYMENT
--------------------------------------------------------
set define off;

  CREATE OR REPLACE EDITIONABLE PROCEDURE "LIBRARY"."SEARCHPAYMENT" (
    vpayment VARCHAR2
)
Is
    -- variable declareation
    c1 SYS_REFCURSOR;
BEGIN
    open c1 FOR 
    SELECT * FROM tblpayment where Upper(userid) LIKE '%' || upper(vpayment) || '%';
    dbms_sql.return_result(c1);

End;

/
--------------------------------------------------------
--  DDL for Procedure SEARCHRETURN
--------------------------------------------------------
set define off;

  CREATE OR REPLACE EDITIONABLE PROCEDURE "LIBRARY"."SEARCHRETURN" (
    vreturn VARCHAR2
)
Is
    -- variable declareation
    c1 SYS_REFCURSOR;
BEGIN
    open c1 FOR 
    SELECT * FROM tblreturn where Upper(userid) LIKE '%' || upper(vreturn) || '%';
    dbms_sql.return_result(c1);

End;

/
--------------------------------------------------------
--  DDL for Procedure SEARCHSTUDENT
--------------------------------------------------------
set define off;

  CREATE OR REPLACE EDITIONABLE PROCEDURE "LIBRARY"."SEARCHSTUDENT" (
    vsname VARCHAR2
)
Is
    -- variable declareation
    c1 SYS_REFCURSOR;
BEGIN
    open c1 FOR 
    SELECT * FROM tblStudent where Upper(Stuname) LIKE '%' || upper(vsname) || '%';
    dbms_sql.return_result(c1);

End;

/
--------------------------------------------------------
--  DDL for Procedure SEARCHUSER
--------------------------------------------------------
set define off;

  CREATE OR REPLACE EDITIONABLE PROCEDURE "LIBRARY"."SEARCHUSER" (
    vname VARCHAR2
)
Is
    -- variable declareation
    c1 SYS_REFCURSOR;
BEGIN
    open c1 FOR 
    SELECT * FROM tbluser where Upper(username) LIKE '%' || upper(vname) || '%';
    dbms_sql.return_result(c1);

End;



/
--------------------------------------------------------
--  DDL for Procedure SHOWAUTHOR
--------------------------------------------------------
set define off;

  CREATE OR REPLACE EDITIONABLE PROCEDURE "LIBRARY"."SHOWAUTHOR" 
is
    -- variable declareation
    c1 SYS_REFCURSOR;
BEGIN
    open c1 FOR SELECT * FROM tblauthor;
    dbms_sql.return_result(c1);

end;



/
--------------------------------------------------------
--  DDL for Procedure SHOWBOOK
--------------------------------------------------------
set define off;

  CREATE OR REPLACE EDITIONABLE PROCEDURE "LIBRARY"."SHOWBOOK" (
 visdeleted Number)
is
    -- variable declareation
    c1 SYS_REFCURSOR;
BEGIN
    open c1 FOR SELECT * FROM tblbook where isdeleted = visdeleted;
    dbms_sql.return_result(c1);

end;


/
--------------------------------------------------------
--  DDL for Procedure SHOWBOOKTYPE
--------------------------------------------------------
set define off;

  CREATE OR REPLACE EDITIONABLE PROCEDURE "LIBRARY"."SHOWBOOKTYPE" 
is
    -- variable declareation
    c1 SYS_REFCURSOR;
BEGIN
    open c1 FOR SELECT * FROM tblbooktype;
    dbms_sql.return_result(c1);

end;



/
--------------------------------------------------------
--  DDL for Procedure SHOWBORROW
--------------------------------------------------------
set define off;

  CREATE OR REPLACE EDITIONABLE PROCEDURE "LIBRARY"."SHOWBORROW" 
is
    -- variable declareation
    c1 SYS_REFCURSOR;
BEGIN
    open c1 FOR SELECT * FROM tblborrow;
    dbms_sql.return_result(c1);

end;

/
--------------------------------------------------------
--  DDL for Procedure SHOWCLOSET
--------------------------------------------------------
set define off;

  CREATE OR REPLACE EDITIONABLE PROCEDURE "LIBRARY"."SHOWCLOSET" 
is
    -- variable declareation
    c1 SYS_REFCURSOR;
BEGIN
    open c1 FOR SELECT * FROM tblbookcloset;
    dbms_sql.return_result(c1);

end;



/
--------------------------------------------------------
--  DDL for Procedure SHOWPAYDETAILS
--------------------------------------------------------
set define off;

  CREATE OR REPLACE EDITIONABLE PROCEDURE "LIBRARY"."SHOWPAYDETAILS" 
is
    -- variable declareation
    c1 SYS_REFCURSOR;
BEGIN
    open c1 FOR SELECT * FROM tblpaymentDetail;
    dbms_sql.return_result(c1);

end;



/
--------------------------------------------------------
--  DDL for Procedure SHOWPAYTMENT
--------------------------------------------------------
set define off;

  CREATE OR REPLACE EDITIONABLE PROCEDURE "LIBRARY"."SHOWPAYTMENT" 
is
    -- variable declareation
    c1 SYS_REFCURSOR;
BEGIN
    open c1 FOR SELECT * FROM tblpayment;
    dbms_sql.return_result(c1);

end;

/
--------------------------------------------------------
--  DDL for Procedure SHOWRETURN
--------------------------------------------------------
set define off;

  CREATE OR REPLACE EDITIONABLE PROCEDURE "LIBRARY"."SHOWRETURN" 
is
    -- variable declareation
    c1 SYS_REFCURSOR;
BEGIN
    open c1 FOR SELECT * FROM tblreturn;
    dbms_sql.return_result(c1);

end;

/
--------------------------------------------------------
--  DDL for Procedure SHOWSTUDENT
--------------------------------------------------------
set define off;

  CREATE OR REPLACE EDITIONABLE PROCEDURE "LIBRARY"."SHOWSTUDENT" 
is
    -- variable declareation
    c1 SYS_REFCURSOR;
BEGIN
    open c1 FOR SELECT * FROM tblstudent;
    dbms_sql.return_result(c1);

end;

/
--------------------------------------------------------
--  DDL for Procedure SHOWUSER
--------------------------------------------------------
set define off;

  CREATE OR REPLACE EDITIONABLE PROCEDURE "LIBRARY"."SHOWUSER" 
is
    -- variable declareation
    c1 SYS_REFCURSOR;
BEGIN
    open c1 FOR SELECT * FROM tbluser;
    dbms_sql.return_result(c1);

end;



/
--------------------------------------------------------
--  DDL for Procedure UPDATEAUTHOR
--------------------------------------------------------
set define off;

  CREATE OR REPLACE EDITIONABLE PROCEDURE "LIBRARY"."UPDATEAUTHOR" (
 vaname tblauthor.authorname%TYPE,
 vagender tblauthor.gender%TYPE,
 vaddress tblauthor.address%TYPE,
 vaphone tblauthor.phone%TYPE,
 vaid tblauthor.authorid%Type
)
IS
BEGIN
	update tblauthor set authorname=vaname,gender=vagender,phone=vaphone,
    address=vaddress where authorid = vaid;
    commit;

End;



/
--------------------------------------------------------
--  DDL for Procedure UPDATEBOOK
--------------------------------------------------------
set define off;

  CREATE OR REPLACE EDITIONABLE PROCEDURE "LIBRARY"."UPDATEBOOK" (
 vbname tblbook.bookname%TYPE,
 vbtype tblbook.booktypeid%TYPE,
 vbyear tblbook.createyear%TYPE,
 vbauthor tblbook.authorid%TYPE,
 vbcloset tblbook.closetid%TYPE,
 vbfloor tblbook.floor%TYPE,
 vupdateby tblbook.updateby%TYPE,
 vudate tblbook.updatedate%TYPE,
 vbprice tblbook.price%TYPE,
 vbqty tblbook.qty%TYPE,
 vbimage tblbook.image%TYPE,
 vbid tblBook.bookid%type
)
IS
BEGIN
	update tblbook set bookname=vbname,booktypeid=vbtype,createyear=vbyear,authorid=vbauthor,closetid=vbcloset,
    floor=vbfloor,updateby=vupdateby,updatedate=vudate,price=vbprice,qty=vbqty,image=vbimage where bookid = vbid;
    commit;

End;



/
--------------------------------------------------------
--  DDL for Procedure UPDATEBOOKTYPE
--------------------------------------------------------
set define off;

  CREATE OR REPLACE EDITIONABLE PROCEDURE "LIBRARY"."UPDATEBOOKTYPE" (
 vbooktype tblbooktype.booktype%TYPE,
 vdesc tblbooktype.description%TYPE,
  vbtypeid tblBooktype.booktypeid%Type
)
IS
BEGIN
	update tblbooktype set booktype=vbooktype,description=vdesc where booktypeid = vbtypeid;
    commit;

End;



/
--------------------------------------------------------
--  DDL for Procedure UPDATEBORROW
--------------------------------------------------------
set define off;

  CREATE OR REPLACE EDITIONABLE PROCEDURE "LIBRARY"."UPDATEBORROW" (
 vborrowid tblborrow.borrowid%Type,
 vuserid tblborrow.userid%TYPE,
 vbookid tblborrow.bookid%TYPE,
 vqty tblborrow.qty%TYPE,
 vpayid tblborrow.paymentdetailid%TYPE,
 vimage tblborrow.image%TYPE,
 vstuid tblborrow.Stuid%TYPE,
 vprice tblborrow.Price%TYPE,
 vstatus tblborrow.status%TYPE
)
IS
BEGIN
	update tblborrow set userid=vuserid,bookid=vbookid,qty=vqty,paymentdetailid=vpayid,image=vimage,Stuid=vstuid,
    Price=vprice,status=vstatus where borrowid = vborrowid;
    commit;

End;

/
--------------------------------------------------------
--  DDL for Procedure UPDATECLOSET
--------------------------------------------------------
set define off;

  CREATE OR REPLACE EDITIONABLE PROCEDURE "LIBRARY"."UPDATECLOSET" (
 vcloset tblbookcloset.closet%TYPE,
  vcid tblBookcloset.closetid%type
)
IS
BEGIN
	update tblbookcloset set closet=vcloset where closetid = vcid;
    commit;

End;



/
--------------------------------------------------------
--  DDL for Procedure UPDATEPAYDETAILS
--------------------------------------------------------
set define off;

  CREATE OR REPLACE EDITIONABLE PROCEDURE "LIBRARY"."UPDATEPAYDETAILS" (
 vpay tblpaymentDetail.pay%TYPE,
 vpayid tblpaymentdetail.paymentdetailid%Type
)
IS
BEGIN
	update tblpaymentDetail set pay=vpay where paymentdetailid = vpayid;
    commit;

End;



/
--------------------------------------------------------
--  DDL for Procedure UPDATESTUDENT
--------------------------------------------------------
set define off;

  CREATE OR REPLACE EDITIONABLE PROCEDURE "LIBRARY"."UPDATESTUDENT" (
 vstuid tblStudent.Stuid%Type,
  vsname tblStudent.stuname%TYPE,
 vgender tblStudent.gender%TYPE,
 vphone tblStudent.PhoneNumber%TYPE,
 vaddress tblStudent.address%TYPE,
 vcollege tblstudent.college%TYPE,
 vyear tblStudent.Syear%TYPE,
 vphoto tblStudent.photo%TYPE
)
IS
BEGIN
	update tblStudent set stuname=vsname,gender=vgender,PhoneNumber=vphone,
    address=vaddress,College=vcollege,Syear=vyear,photo=vphoto where Stuid = vstuid;
    commit;

End;

/
--------------------------------------------------------
--  Constraints for Table TBLAUTHOR
--------------------------------------------------------

  ALTER TABLE "LIBRARY"."TBLAUTHOR" MODIFY ("AUTHORID" NOT NULL ENABLE);
  ALTER TABLE "LIBRARY"."TBLAUTHOR" MODIFY ("AUTHORNAME" NOT NULL ENABLE);
  ALTER TABLE "LIBRARY"."TBLAUTHOR" ADD CONSTRAINT "TBLAUTHORID_PK" PRIMARY KEY ("AUTHORID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS"  ENABLE;
--------------------------------------------------------
--  Constraints for Table TBLBOOK
--------------------------------------------------------

  ALTER TABLE "LIBRARY"."TBLBOOK" MODIFY ("BOOKID" NOT NULL ENABLE);
  ALTER TABLE "LIBRARY"."TBLBOOK" MODIFY ("BOOKNAME" NOT NULL ENABLE);
  ALTER TABLE "LIBRARY"."TBLBOOK" MODIFY ("BOOKTYPEID" NOT NULL ENABLE);
  ALTER TABLE "LIBRARY"."TBLBOOK" MODIFY ("CREATEYEAR" NOT NULL ENABLE);
  ALTER TABLE "LIBRARY"."TBLBOOK" MODIFY ("CREATEBY" NOT NULL ENABLE);
  ALTER TABLE "LIBRARY"."TBLBOOK" MODIFY ("AUTHORID" NOT NULL ENABLE);
  ALTER TABLE "LIBRARY"."TBLBOOK" MODIFY ("CLOSETID" NOT NULL ENABLE);
  ALTER TABLE "LIBRARY"."TBLBOOK" MODIFY ("FLOOR" NOT NULL ENABLE);
  ALTER TABLE "LIBRARY"."TBLBOOK" ADD CONSTRAINT "TBLBOOK_PK" PRIMARY KEY ("BOOKID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS"  ENABLE;
  ALTER TABLE "LIBRARY"."TBLBOOK" MODIFY ("PRICE" NOT NULL ENABLE);
  ALTER TABLE "LIBRARY"."TBLBOOK" MODIFY ("QTY" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table TBLBOOKCLOSET
--------------------------------------------------------

  ALTER TABLE "LIBRARY"."TBLBOOKCLOSET" MODIFY ("CLOSETID" NOT NULL ENABLE);
  ALTER TABLE "LIBRARY"."TBLBOOKCLOSET" MODIFY ("CLOSET" NOT NULL ENABLE);
  ALTER TABLE "LIBRARY"."TBLBOOKCLOSET" ADD CONSTRAINT "TBLCOMPARE_PK" PRIMARY KEY ("CLOSETID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS"  ENABLE;
--------------------------------------------------------
--  Constraints for Table TBLBOOKTYPE
--------------------------------------------------------

  ALTER TABLE "LIBRARY"."TBLBOOKTYPE" ADD CONSTRAINT "TBLBOOKTYPE_PK" PRIMARY KEY ("BOOKTYPEID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS"  ENABLE;
  ALTER TABLE "LIBRARY"."TBLBOOKTYPE" MODIFY ("BOOKTYPEID" NOT NULL ENABLE);
  ALTER TABLE "LIBRARY"."TBLBOOKTYPE" MODIFY ("BOOKTYPE" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table TBLBORROW
--------------------------------------------------------

  ALTER TABLE "LIBRARY"."TBLBORROW" ADD CONSTRAINT "TBLBORROW_PK" PRIMARY KEY ("BORROWID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS"  ENABLE;
  ALTER TABLE "LIBRARY"."TBLBORROW" MODIFY ("BORROWID" NOT NULL ENABLE);
  ALTER TABLE "LIBRARY"."TBLBORROW" MODIFY ("USERID" NOT NULL ENABLE);
  ALTER TABLE "LIBRARY"."TBLBORROW" MODIFY ("BOOKID" NOT NULL ENABLE);
  ALTER TABLE "LIBRARY"."TBLBORROW" MODIFY ("QTY" NOT NULL ENABLE);
  ALTER TABLE "LIBRARY"."TBLBORROW" MODIFY ("PAYMENTDETAILID" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table TBLPAYMENT
--------------------------------------------------------

  ALTER TABLE "LIBRARY"."TBLPAYMENT" ADD CONSTRAINT "TBLPAYMENT_PK" PRIMARY KEY ("PAYMENTID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS"  ENABLE;
  ALTER TABLE "LIBRARY"."TBLPAYMENT" MODIFY ("PAYMENTID" NOT NULL ENABLE);
  ALTER TABLE "LIBRARY"."TBLPAYMENT" MODIFY ("USERID" NOT NULL ENABLE);
  ALTER TABLE "LIBRARY"."TBLPAYMENT" MODIFY ("BOOKID" NOT NULL ENABLE);
  ALTER TABLE "LIBRARY"."TBLPAYMENT" MODIFY ("PAYMENTDETAILID" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table TBLPAYMENTDETAIL
--------------------------------------------------------

  ALTER TABLE "LIBRARY"."TBLPAYMENTDETAIL" MODIFY ("PAYMENTDETAILID" NOT NULL ENABLE);
  ALTER TABLE "LIBRARY"."TBLPAYMENTDETAIL" MODIFY ("PAY" NOT NULL ENABLE);
  ALTER TABLE "LIBRARY"."TBLPAYMENTDETAIL" ADD CONSTRAINT "PAYMENTDETAIL_PK" PRIMARY KEY ("PAYMENTDETAILID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS"  ENABLE;
--------------------------------------------------------
--  Constraints for Table TBLRETURN
--------------------------------------------------------

  ALTER TABLE "LIBRARY"."TBLRETURN" ADD CONSTRAINT "TBLRETURN_PK" PRIMARY KEY ("RETURNID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS"  ENABLE;
  ALTER TABLE "LIBRARY"."TBLRETURN" MODIFY ("RETURNID" NOT NULL ENABLE);
  ALTER TABLE "LIBRARY"."TBLRETURN" MODIFY ("USERID" NOT NULL ENABLE);
  ALTER TABLE "LIBRARY"."TBLRETURN" MODIFY ("BOOKID" NOT NULL ENABLE);
  ALTER TABLE "LIBRARY"."TBLRETURN" MODIFY ("PAYMENTDETAILID" NOT NULL ENABLE);
  ALTER TABLE "LIBRARY"."TBLRETURN" MODIFY ("QTY" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table TBLSTUDENT
--------------------------------------------------------

  ALTER TABLE "LIBRARY"."TBLSTUDENT" MODIFY ("STUID" NOT NULL ENABLE);
  ALTER TABLE "LIBRARY"."TBLSTUDENT" ADD CONSTRAINT "TABLE1_PK" PRIMARY KEY ("STUID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS"  ENABLE;
--------------------------------------------------------
--  Constraints for Table TBLUSER
--------------------------------------------------------

  ALTER TABLE "LIBRARY"."TBLUSER" MODIFY ("USERID" NOT NULL ENABLE);
  ALTER TABLE "LIBRARY"."TBLUSER" MODIFY ("USERNAME" NOT NULL ENABLE);
  ALTER TABLE "LIBRARY"."TBLUSER" MODIFY ("PASSWORD" NOT NULL ENABLE);
  ALTER TABLE "LIBRARY"."TBLUSER" MODIFY ("GENDER" NOT NULL ENABLE);
  ALTER TABLE "LIBRARY"."TBLUSER" ADD CONSTRAINT "TBLUSER_PK" PRIMARY KEY ("USERID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS"  ENABLE;
  ALTER TABLE "LIBRARY"."TBLUSER" MODIFY ("PHONE" NOT NULL ENABLE);
  ALTER TABLE "LIBRARY"."TBLUSER" MODIFY ("ADDRESS" NOT NULL ENABLE);
--------------------------------------------------------
--  Ref Constraints for Table TBLBOOK
--------------------------------------------------------

  ALTER TABLE "LIBRARY"."TBLBOOK" ADD CONSTRAINT "TBLBOOK_FK1" FOREIGN KEY ("AUTHORID")
	  REFERENCES "LIBRARY"."TBLAUTHOR" ("AUTHORID") ENABLE;
  ALTER TABLE "LIBRARY"."TBLBOOK" ADD CONSTRAINT "TBLBOOK_FK2" FOREIGN KEY ("CLOSETID")
	  REFERENCES "LIBRARY"."TBLBOOKCLOSET" ("CLOSETID") ENABLE;
  ALTER TABLE "LIBRARY"."TBLBOOK" ADD CONSTRAINT "TBLBOOK_FK3" FOREIGN KEY ("BOOKTYPEID")
	  REFERENCES "LIBRARY"."TBLBOOKTYPE" ("BOOKTYPEID") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table TBLBORROW
--------------------------------------------------------

  ALTER TABLE "LIBRARY"."TBLBORROW" ADD CONSTRAINT "TBLBORROW_FK3" FOREIGN KEY ("PAYMENTDETAILID")
	  REFERENCES "LIBRARY"."TBLPAYMENTDETAIL" ("PAYMENTDETAILID") ENABLE;
  ALTER TABLE "LIBRARY"."TBLBORROW" ADD CONSTRAINT "TBLBORROW_FK1" FOREIGN KEY ("USERID")
	  REFERENCES "LIBRARY"."TBLUSER" ("USERID") ENABLE;
  ALTER TABLE "LIBRARY"."TBLBORROW" ADD CONSTRAINT "TBLBORROW_FK2" FOREIGN KEY ("BOOKID")
	  REFERENCES "LIBRARY"."TBLBOOK" ("BOOKID") ENABLE;
  ALTER TABLE "LIBRARY"."TBLBORROW" ADD CONSTRAINT "TBLBORROW_FK4" FOREIGN KEY ("STUID")
	  REFERENCES "LIBRARY"."TBLSTUDENT" ("STUID") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table TBLPAYMENT
--------------------------------------------------------

  ALTER TABLE "LIBRARY"."TBLPAYMENT" ADD CONSTRAINT "TBLPAYMENT_FK3" FOREIGN KEY ("PAYMENTDETAILID")
	  REFERENCES "LIBRARY"."TBLPAYMENTDETAIL" ("PAYMENTDETAILID") ENABLE;
  ALTER TABLE "LIBRARY"."TBLPAYMENT" ADD CONSTRAINT "TBLPAYMENT_FK1" FOREIGN KEY ("USERID")
	  REFERENCES "LIBRARY"."TBLUSER" ("USERID") ENABLE;
  ALTER TABLE "LIBRARY"."TBLPAYMENT" ADD CONSTRAINT "TBLPAYMENT_FK2" FOREIGN KEY ("BOOKID")
	  REFERENCES "LIBRARY"."TBLBOOK" ("BOOKID") ENABLE;
  ALTER TABLE "LIBRARY"."TBLPAYMENT" ADD CONSTRAINT "TBLPAYMENT_FK4" FOREIGN KEY ("STUID")
	  REFERENCES "LIBRARY"."TBLSTUDENT" ("STUID") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table TBLRETURN
--------------------------------------------------------

  ALTER TABLE "LIBRARY"."TBLRETURN" ADD CONSTRAINT "TBLRETURN_FK1" FOREIGN KEY ("USERID")
	  REFERENCES "LIBRARY"."TBLUSER" ("USERID") ENABLE;
  ALTER TABLE "LIBRARY"."TBLRETURN" ADD CONSTRAINT "TBLRETURN_FK2" FOREIGN KEY ("BOOKID")
	  REFERENCES "LIBRARY"."TBLBOOK" ("BOOKID") ENABLE;
  ALTER TABLE "LIBRARY"."TBLRETURN" ADD CONSTRAINT "TBLRETURN_FK3" FOREIGN KEY ("STUID")
	  REFERENCES "LIBRARY"."TBLSTUDENT" ("STUID") ENABLE;
